#!/bin/csh
#  Before run this script,
#   generate openXM.tar.gz 
#   by the command 
#    ~/bin/makeOpenXMDist
#     mount-unkei-dc1 
#     bacupdir5b openXM 
#   Next, extract all files:
#   cd /fuji2/dist
#   tar xzvf /fuji2/OX/openXM.tar.gz  
#   cd /fuji2/dist/openXM
#   ./misc/clean-for-binary-dist
#
pwd
if ( `pwd` != "/fuji2/dist/openXM" ) then
    echo "Invalid directory to run clean-for-binary-dist"
    exit
endif

echo "This is clean-for-binary-dist to generate openXM, sm1 + oxasir."
/bin/rm -f this-is-for-cpu-os.txt
echo -n "CPU=" >this-is-for-cpu-os.txt
uname -m >this-is-for-cpu-os.txt
echo -n "OS=" >>this-is-for-cpu-os.txt
uname -s >>this-is-for-cpu-os.txt
echo -n "Version=" >>this-is-for-cpu-os.txt
uname -r >>this-is-for-cpu-os.txt
echo "Compiled without -static option." >>this-is-for-cpu-os.txt

pwd
echo "Cleaning src directories OK?"
sleep 10
/bin/rm -rf src/Ti*
/bin/rm -rf src/phc
/bin/rm -rf src/gnuplot*
/bin/rm -rf src/k097
/bin/rm -rf install.txt

cp misc/readme.binary-dist .
## /bin/rm -rf misc
pushd src
tar czvf ../../kan96.tgz kan96xx
popd

## Generate documents SSkan and copy sm1 to openXM/bin
pushd src/SSkan
make
pushd Doc
make
popd
make install-openXM-bin
popd

## Generate ox, oxlog, ox_sm1 and copy them to openXM/bin
## Generate also symbolic links in openXM/lib/sm1/bin
pushd src/kxx
make
make install
popd

## Clean src/kan96xx and src/kxx
echo "Cleaning src/kan96xx and src/kxx"
sleep 10 
/bin/rm -rf src/kan96xx/Kan
/bin/rm -rf src/kan96xx/Doc/Old src/kan96xx/Doc/checkData src/kan96xx/Doc/*~ 
/bin/rm -rf src/kan96xx/gc*
/bin/rm -rf src/kan96xx/gmp*
/bin/rm -rf src/kan96xx/plugin
/bin/rm -rf src/kan96xx/Makefile
/bin/rm -rf src/kan96xx/cleanForDist
/bin/rm -rf src/kan96xx/makeDist
/bin/rm -rf src/kan96xx/makeBinary
/bin/rm -rf src/kxx

/bin/rm -rf bin/asir
/bin/rm -rf bin/phc
/bin/rm -rf bin/lin_phcv2p
/bin/rm -rf lib/k097
/bin/rm -rf lib/sm1/ole
/bin/rm -rf lib/asir/ox_asir.19990908.linux


cd ..
tar czvf sm1.binary.$OSTYPE.$HOSTTYPE.tar.gz openXM
echo "Done."





