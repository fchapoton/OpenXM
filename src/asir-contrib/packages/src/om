/*$OpenXM: OpenXM/src/asir-contrib/packages/src/om,v 1.5 2000/01/18 14:06:33 tam Exp $*/

Om_proc = -1$
#define OM_FIND_PROC(P)  P = getopt(proc);\
                          if (type(P) == -1) {\
                             P = om_find_proc();\
                          }

def om_find_proc() {
  extern Om_proc;
  if (Om_proc == -1) {
     A = ox_get_serverinfo();
     /* Look for OMproxy. Not yet written */
     /* Start java OMproxy automatically if there is not ox_sm1 */
     Om_proc = om_start();
  }
  return(Om_proc);
}

/*&jp-texi
@node OpenMath 函数,,, Top
@chapter OpenMath 函数

*/
/*&eg-texi
@node OpenMath Functions,,, Top
@chapter OpenMath Functions

*/

/*&eg-texi
@menu
* om_start::
@end menu
@node om_start,,, OpenMath Functions
@subsection @code{om_start}
@findex om_start
@table @t
@item om_start()
::  Start @code{OMproxy} server to make a translation between CMO and OpenMath XML expressions.
@end table

@table @var
@item return
Number
@end table
*/
/*&jp-texi
@menu
* om_start::
@end menu
@node om_start,,, OpenMath 函数
@subsection @code{om_start}
@findex om_start
@table @t
@item om_start()
::  @code{OMproxy} をスタートする. このサーバは CMO と OpenMath XML との間の変換をおこなう.
@end table

@table @var
@item return
数
@end table
*/
/*&C-texi
@example
[155] load("om");
1
[160] om_start();
control: wait OX
Trying to connect to the server... Done.
0
[161] om_xml(<<1,0>>+2*<<0,1>>);
<OMOBJ><OMA><OMS name="DMP" cd="poly"/>
<OMA><OMS name="PolyRing" cd="poly"/>
 <OMI>2</OMI></OMA><OMA>
 <OMS name="SDMP" cd="poly"/>
 <OMA><OMS name="Monom" cd="poly"/><OMI>1</OMI><OMI>1</OMI><OMI>0</OMI></OMA>
 <OMA><OMS name="Monom" cd="poly"/><OMI>2</OMI><OMI>0</OMI><OMI>1</OMI></OMA>
</OMA></OMA></OMOBJ>
[162] om_xml_to_cmo(@@);
(1)*<<1,0>>+(2)*<<0,1>>
@end example
*/

def om_start() {
  extern Om_proc;
 /* ctrl("ox_check",0);   for buggy mathcap of OMproxy */
  CPort = generate_port();
  SPort = generate_port();
 
  Outfile = " > /dev/null ";
  Lib = getenv("OpenXM_HOME")+"/lib/java-support"$
  Com = "java OMproxy -data "+ rtostr(SPort) +" -control "+ rtostr(CPort);
 /* Com = Com +" -nohup || "+ Com;	for not to stop by CTRL-C */
  Com = "cd "+ Lib +";"+ Com;
  Com = "/bin/csh -c \""+ Com +"\"";
  Com = "/bin/csh -c '(oxlog xterm -iconic -T OMproxy -n OMproxy -e "+ Com +">&/dev/null)"
	+"||"+ Com + Outfile +"' &";
 /* print(Com +"\n"); */
  shell(Com);
  shell("sleep 5");
  print("Trying to connect to the server...",0)$
  CSocket = try_connect("localhost",CPort);
  SSocket = try_connect("localhost",SPort);
  A = register_server(CSocket,CPort,SSocket,SPort);
  print(" Done.");
  Om_proc = A;
  return(A);
}

/*&eg-texi
@menu
* om_xml::
@end menu
@node om_xml,,, OpenMath Functions
@subsection @code{om_xml}
@findex om_xml
@table @t
@item om_xml(@var{s}|proc=@var{p})
::  Translate CMO expression of  @var{s} to a XML expression of OpenMath.
@end table

@table @var
@item return
String
@item p
Number
@item s
Object
@end table

@itemize @bullet
@item  
Translate CMO @var{s} to a XML expression of OpenMath.
@end itemize
*/
/*&jp-texi
@menu
* om_xml::
@end menu
@node om_xml,,, OpenMath 函数
@subsection @code{om_xml}
@findex om_xml
@table @t
@item om_xml(@var{s}|proc=@var{p})
::  @var{s} の CMO 表現を OpenMath の XML expression 表現になおす.
@end table

@table @var
@item return
文字列
@item p
数
@item s
オブジェクト
@end table

@itemize @bullet
@item   @var{s} の CMO 表現を OpenMath の XML expression 表現になおす.
@end itemize
*/
/*&C-texi
@example
For (I=0; I<10; I++) {
   A = 2^I;
   B = om_xml(A);
   C = om_xml_to_cmo(B);
   print(A == C);
}
@end example
*/

def om_xml(F) {
  OM_FIND_PROC(P);
  ox_push_cmo(P,F);
  ox_push_cmo(P,"CMO2OMXML");
  ox_push_cmd(P,269);  /* SM_executeFunction */
  return(ox_pop_cmo(P));
}

/*&eg-texi
@menu
* om_xml_to_cmo::
@end menu
@node om_xml_to_cmo,,, OpenMath Functions
@subsection @code{om_xml_to_cmo}
@findex om_xml_to_cmo
@table @t
@item om_xml_to_cmo(@var{s}|proc=@var{p})
::  Translate XML expression @var{s} of OpenMath to a CMO.
@end table

@table @var
@item return
Object
@item p
Number
@item s
String
@end table

@itemize @bullet
@item  
Translate XML expression @var{s} of OpenMath to a CMO.
@end itemize
*/
/*&jp-texi
@menu
* om_xml_to_cmo::
@end menu
@node om_xml_to_cmo,,, OpenMath 函数
@subsection @code{om_xml_to_cmo}
@findex om_xml_to_cmo
@table @t
@item om_xml_to_cmo(@var{s}|proc=@var{p})
::  OpenMath の XML 表現 @var{s} を CMO になおす.
@end table

@table @var
@item return
オブジェクト
@item p
数
@item s
文字列
@end table

@itemize @bullet
@item   OpenMath の XML 表現 @var{s} を CMO に変換する.
@end itemize
*/

def om_xml_to_cmo(F) {
  OM_FIND_PROC(P);
  ox_push_cmo(P,F);
  ox_push_cmo(P,"OMXML2CMO");
  ox_push_cmd(P,269);  /* SM_executeFunction */
  return(ox_pop_cmo(P));
}

end$

