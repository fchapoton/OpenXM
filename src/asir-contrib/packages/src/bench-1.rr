/*$OpenXM$ */
/* Old: bench-1, see Attic */

/* Comparison between string data and CMO_ZZ */

def zz1(P,A) {
  M = ox_get_serverinfo(P);
  if (M[0][1] == "ox_asir") {
     Asir = 1 ;  print("Your peer is ox_asir.");
  }else{
     Asir = 0;   print("We assume that your peer is ox_sm1.");
  }
  C = 2^A;
  print("Checking ",0);
  print(C);
  print("----------------------------------------------------");
  for (I=C; I<C+3; I++) {
    if (Asir == 1) {
      ox_execute_string(P,rtostr(I)+";")$
    }else{
      ox_execute_string(P,"("+rtostr(I)+")..")$
    }
    D = ox_pop_cmo(P);
    print(D-I);
  }
}

def zz2(P,A,Type) {
  M = ox_get_serverinfo(P);
  if (M[0][1] != "Ox_system=ox_sm1_ox_sm1_forAsir") {
     print("The peer must be ox_sm1");
     return(-1);
  }
  ox_execute_string(P,"[(cmoLispLike) 0] extension [(oxPrintMessage) 0] extension ");
  ox_pop_cmo(P);

  C = 2^A;
  print("Checking ",0);
  print(C);
  print("----------------------------------------------------");
  if (Type == 1) {
     print("Time for execute_string (20 times)");
  }else{
     print("Time for sending cmo (20 times)");
  }
  shell("date");
  B = ox_push_cmo(P,C);
  S = "("+ox_pop_string(P)+")..";
  for (I=0; I<20; I++) {
    if (Type == 1) {
      ox_execute_string(P,S);
    }else{
      ox_push_cmo(P,C);
    }
  }
  print(C-ox_pop_cmo(P));
  shell("date");
}
/*&ja
@code{zz2(@var{p},@var{k},@var{type})} は識別番号 @var{p} の ox_sm1 server
に 2^@var{k} を 20 回おくり最後の 1 個を pop する.
@var{type} が 1 のときは 2^@var{k} の値を文字列として送り, executeStringByLocalParser で文字列を object へ変換する.
@var{type} が 1 でないときは 2^@var{k} の値を CMO_ZZ として送る.

2^100000 は文字列データとしては 30103 byte あり,
99900 ではじまり 09376 でおわる.
135MHz pentium machine で localhost で, 通常の desktop 環境で実時間を計測
すると, 2^100000 を文字列として 20 回送ると, 12 秒,
CMO_ZZ として送ると, 2 秒の時間がかかった.
 
なお @code{ox_asir} にたいして OX_DATA_ASIR_LOCAL で同じデータを送ると,
1 秒以下であった. 
*/
/*&C
@example
[155] load("xm");
1
xm Version 19991118. ox_help(0); ox_help("keyword"); for help message 
[256] load("bench-1.rr");
1
[260] sm1_start();
0
[261] zz2(0,10,0);
Checking 1024
----------------------------------------------------
Time for sending cmo (20 times)
Tue Nov 23 12:10:02 JST 1999
0
Tue Nov 23 12:10:02 JST 1999
0
[262] zz2(0,10,1);
Checking 1024
----------------------------------------------------
Time for execute_string (20 times)
Tue Nov 23 12:10:09 JST 1999
0
Tue Nov 23 12:10:09 JST 1999
0
[263] zz2(0,100000,0);
.....08402597025155304734389883109376
----------------------------------------------------
Time for sending cmo (20 times)
Tue Nov 23 12:10:38 JST 1999
0
Tue Nov 23 12:10:40 JST 1999
0
[264] zz2(0,100000,1);
.....08402597025155304734389883109376
----------------------------------------------------
Time for execute_string (20 times)
Tue Nov 23 12:11:10 JST 1999
0
Tue Nov 23 12:11:22 JST 1999
0
@end example
*/

def zz2_asirlocal(P,A) {
  M = ox_get_serverinfo(P);
  if (M[0][1] != "ox_asir") {
     print("The peer must be ox_asir");
     return(-1);
  }

  C = 2^A;
  print("Checking ",0);
  print(C);
  print("----------------------------------------------------");
  print("Time for sending OX_ASIR_LOCAL_OBJECT (20 times)");

  shell("date");
  for (I=0; I<20; I++) {
    ox_push_local(P,C);
  }
  print(C-ox_pop_local(P));
  shell("date");
}

end$
