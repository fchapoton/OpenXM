/* $OpenXM: OpenXM/src/asir-contrib/packages/src/taka_util.rr,v 1.2 2002/11/14 09:29:25 takayama Exp $ */

/*&usage begin: util_filter(Comm,InS)
 example: util_filter("java Http unkei:8091","Sqrt[2]");
 end:
*/
def taka_util_filter(Comm,InS,Opt) {
  Commfile = ".openxm-tmp.util.filter.commfile."+rtostr(get_pid());
  Infile   = ".openxm-tmp.util.filter.infile."+rtostr(get_pid());
  Outfile  = ".openxm-tmp.util.filter.outfile."+rtostr(get_pid());
  /* BUG: Opt is ignored for now.
      example:
     util_filter(Comm,InS|env=[["CLASSPATH","/usr/local/java/lib"]])
  */
  C = "#!/bin/sh\n"+
      Comm+" <"+Infile+" "+
      " > "+Outfile+"\n";
  /* print(C); */

  Fp = open_file(Commfile,"w");
  if (Fp < 0) return 0;
  In = strtoascii(C);
  N = length(In);
  for (I=0; I<N; I++) {
    put_byte(Fp,In[I]);
  }
  close_file(Fp);
  shell("chmod +x "+Commfile);

  Fp = open_file(Infile,"w");
  if (Fp < 0) return 0;
  In = strtoascii(InS);
  N = length(In);
  for (I=0; I<N; I++) {
    put_byte(Fp,In[I]);
  }
  close_file(Fp);

  shell("./"+Commfile);

  A=taka_util_load_file_as_a_string(Outfile);
  shell("rm -f "+Commfile+" "+Infile+" "+Outfile);
  return A;
}

def taka_util_load_file_as_a_string(Fname) {
  Fp = open_file(Fname);
  if (Fp < 0) return 0;
  Str = [];
  while ((C=get_byte(Fp)) > 0) {
    Str=cons(C,Str);
  }
  Str = reverse(Str);
  return asciitostr(Str);
}

Loaded_taka_util=1$
end$
