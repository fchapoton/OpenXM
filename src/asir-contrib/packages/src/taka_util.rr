/* $OpenXM: OpenXM/src/asir-contrib/packages/src/taka_util.rr,v 1.4 2002/11/16 02:17:09 takayama Exp $ */

/*&usage begin: util_filter(Comm,InS)
 example: util_filter("java Http unkei:8091","Sqrt[2]");
 end:
*/
def taka_util_filter(Comm,InS,Opt) {
  Commfile = ".openxm-tmp.util.filter.commfile."+rtostr(get_pid());
  Infile   = ".openxm-tmp.util.filter.infile."+rtostr(get_pid());
  Outfile  = ".openxm-tmp.util.filter.outfile."+rtostr(get_pid());
  /* BUG: Opt is ignored for now.
      example:
     util_filter(Comm,InS|env=[["CLASSPATH","/usr/local/java/lib"]])
  */
  C = "#!/bin/sh\n"+
      Comm+" <"+Infile+" "+
      " > "+Outfile+"\n";
  /* print(C); */

  Fp = open_file(Commfile,"w");
  if (Fp < 0) return 0;
  In = strtoascii(C);
  N = length(In);
  for (I=0; I<N; I++) {
    put_byte(Fp,In[I]);
  }
  close_file(Fp);
  shell("chmod +x "+Commfile);

  Fp = open_file(Infile,"w");
  if (Fp < 0) return 0;
  In = strtoascii(InS);
  N = length(In);
  for (I=0; I<N; I++) {
    put_byte(Fp,In[I]);
  }
  close_file(Fp);

  shell("./"+Commfile);

  A=taka_util_load_file_as_a_string(Outfile);
  shell("rm -f "+Commfile+" "+Infile+" "+Outfile);
  return A;
}

def taka_util_load_file_as_a_string(Fname) {
  Fp = open_file(Fname);
  if (Fp < 0) return 0;
  Str = [];
  while ((C=get_byte(Fp)) > 0) {
    Str=cons(C,Str);
  }
  Str = reverse(Str);
  return asciitostr(Str);
}
def taka_util_write_string_to_a_file(Fname,Str) {
  Fp = open_file(Fname,"w");
  if (Fp < 0) return 0;
  S = strtoascii(Str);
  N = length(S);
  for (I=0; I<N; I++) {
    put_byte(Fp,S[I]);
  }
  return close_file(Fp);
}

/* From fb/src/a2tfb/tfb2asir.rr */
def taka_util_find_substr(W,S) {
  N1 = length(W); N2 = length(S);
  for (J=0; J<N2-N1+1; J++) {
    for  (I=0; I<N1; I++) {
      if (W[I] != S[J+I]) break;
      if (I == N1-1) return J;
    }
  }
  return -1;
}

def taka_util_part(S,P,Q) {
  if (Q < P) return [];
  R = newvect(Q-P+1);
  for (I=0; I<=Q-P; I++) {
    R[I] = S[I+P];
  }
  return vtol(R);
}

def taka_util_remove_cr(S) {
  R = newvect(length(S));
  for (I=0; I<length(S); I++) {
    if (S[I] < 0x20) {
       R[I] = 0x20;
    }else{
       R[I] = S[I];
    }
  }
  return vtol(R);
}
/*
  example: taka_util_find_and_replace1([1,2],[3,4,1,2,5,6],[22,23,24],0); 
  example: taka_util_find_and_replace1([1,2],[1,2,2,2,5,6],[22,23,24],0); 
  example: taka_util_find_and_replace1([1,2],[2,2,2,2,1,2],[22,23,24],0); 
  example: taka_util_find_and_replace1([1,2],[3,4,1,2,5,6],[],0); 
*/
def taka_util_find_and_replace1(W,S,Snew,StartIndex) {
  N1 = length(W); N2 = length(S);
  for (J=StartIndex; J<N2-N1+1; J++) {
    for  (I=0; I<N1; I++) {
      if (W[I] != S[J+I]) break;
      if (I == N1-1) {
         S0 = taka_util_part(S,0,J-1);
         S0 = append(S0,Snew);
         S0 = append(S0,taka_util_part(S,J+N1,N2-1));
         return [J,S0];
      }
    }
  }
  return [-1,S];
}

/*
  example: taka_util_find_and_replace([1,2],[5,1,2,5,1,2,1,2],[22,23,24]); 
*/
def taka_util_find_and_replace(W,S,Snew) {
  J = 0;
  T = [-1,S];
  while (J < length(T[1])) {
    T = taka_util_find_and_replace1(W,T[1],Snew,J);
    if (T[0] == -1) break;
    J += length(Snew);
  }
  return T[1];
}


Loaded_taka_util=1$
end$
