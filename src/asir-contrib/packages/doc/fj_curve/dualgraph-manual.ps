%!PS-Adobe-2.0
%%Creator: dvips(k) 5.92b p1.6 Copyright 2003 ASCII Corp.(www-ptex@ascii.co.jp)
%%+ based on dvips(k) 5.92b Copyright 2002 Radical Eye Software (www.radicaleye.com)
%%Title: dualgraph-manual.dvi
%%CreationDate: Sat Nov 12 15:21:29 2005
%%Pages: 3
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: TimesNewRomanPSMT NimbusRomNo9L-Medi
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvipsk dualgraph-manual
%DVIPSParameters: dpi=300, compressed
%DVIPSSource:  TeX output 2005.11.12:1521
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 300 300 (dualgraph-manual.dvi)
@start
%DVIPSBitmapFont: Fa cmex10 12 2
/Fa 2 128 df<497EA2497EA2EB0660497EEB1C38EB1818497EEB700E3901F00F803903
B00DC03907300CE0001C14380078141E00E014070080140100001400AC201D7D7E27>
126 D<EB300CAC0080140100E014070078141E001C1438000714E03903B00DC03901F00F
803900700E00EB300C6D5AEB1C38EB0C306D5A6D5AA26D5AA2201D7D7F27> I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmsy10 12 2
/Fb 2 4 df<B612FCA21E027C8C27> 0 D<13C0A538E0C1C0EAF0C33838C700EA0EDCEA
03F0EA00C0EA03F0EA0EDCEA38C738F0C3C0EAE0C13800C000A512157D9619> 3
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmtt12 12 73
/Fc 73 122 df<EA701CEAF01EA7EA701CA5EA600C0F0E7B9D1A> 34
D<136013E0A4EA03F8EA0FFE381FFF80383CE7C0EA78E13870E0E012E013E1A2EBE0C000
7013001278123F6C7EEA07FCC6B4FCEBEF80EBE3C013E1EBE0E012F0A312E03870E1C0EA
78E3383CEF80381FFF006C5AEA03F0C65AA3136013277DA21A> 36
D<1338137813F0EA01E0EA03C0EA0780EA0F00120E5AA25AA25AA35AAA1270A37EA27EA2
7E120FEA0780EA03C0EA01E0EA00F8137813380D2878A21A> 40
D<126012F012787E7E7EEA07801203EA01C0A2EA00E0A21370A31338AA1370A313E0A2EA
01C0A2EA03801207EA0F00121E5A5A5A12600D287CA21A> I<13E0A538F0E1E0EAFCE738
7EEFC0381FFF00EA07FCEA01F0EA07FCEA1FFF387EEFC038FCE7E0EAF0E13800E000A513
157D991A> I<13301378A8387FFFF0B512F8A26C13F038007800A8133015167E991A> I<
1218123E127E127F123F121F1207120EA2121C12FC12F81260080D77851A> I<387FFFC0
B512E0A26C13C013047D901A> I<1230127812FCA212781230060676851A> I<14C0EB01
E0A2130314C013071480130F1400A25B131E133E133C137C1378A213F85B12015B12035B
A212075B120F90C7FC5A121EA2123E123C127C127812F85AA2126013277DA21A> I<EA01
F0EA07FC487EEA1F1FEA1C0738380380A2387001C0A338E000E0A9EAF001007013C0A2EA
780300381380EA3C07001C1300EA1F1FEA0FFE6C5AEA01F0131E7D9D1A> I<13C01201A2
12031207120F127F12FD12711201B2EA7FFFA3101E7B9D1A> I<EA03F8EA0FFE381FFF80
383C07C0387801E0EA70004813707EA21260C7FCA214E0A2EB01C01303EB0780EB0F0013
1E5B5B5BEA03E0485A48C7FC001E13705A387FFFF0B5FC7E141E7D9D1A> I<EA03FCEA0F
FF003F13C0383C03E0EA78001470A2C7FCA214E01301EB07C03803FF80140014C0380003
E01300147014781438A2126012F01478481370007013E0EA7E03383FFFC0000F1300EA01
FC151E7E9D1A> I<EB0F80131F133BA2137313F313E3EA01C3120313831207EA0F03120E
121E123C1238127812F0B512FEA338000380A6EB3FF8EB7FFCEB3FF8171E7F9D1A> I<38
3FFFC05AA20070C7FCA8EA71F8EA7FFEEBFF80387E07C0EA7801383000E0C7FC1470A312
6012F014E0EAE001387003C0387C0F80383FFF00EA0FFEEA03F0141E7D9D1A> I<137E38
01FF804813C0380781E0EA0F01121E383C00C0003813005AA3EAE1F8EAE7FEB5FC38FE07
8038F803C0EAF001EB00E05AA31270A2EB01C01238383C0380EA1E0F380FFF00EA07FCEA
01F0131E7D9D1A> I<12E0B512F8A214F038E000E0EB01C0EA0003EB0780EB0F00130E5B
A25BA25BA25BA3485AA4485AA8151F7E9E1A> I<EA01FCEA07FF001F13C01307383C01E0
387800F000701370A3007813F0003813E0381E03C0380FFF803803FE00487E381F8FC038
3C01E0387800F000701370481338A46C137800701370007813F0383E03E0381FFFC00007
1300EA01FC151E7E9D1A> I<EA01F0EA07FCEA1FFEEA3E0F38380780EA7003EB01C012E0
A2EB00E0A313011270EA7803EA3C0FEA1FFFEA0FFCEA03F0380001C0A3EB0380126038F0
07005B133EEA7FFCEA3FF0EA0FC0131E7D9D1A> I<1230127812FCA2127812301200A912
30127812FCA212781230061576941A> I<1218123C127EA2123C12181200A91218123C12
7EA2123E121E120EA2121C123C12F812F01260071C77941A> I<387FFFF0B512F8A26C13
F0C8FCA4387FFFF0B512F8A26C13F0150C7E941A> 61 D<1338137CA2136C13EEA313C6
A2EA01C7A3138300031380A4380701C0A213FFA24813E0EA0E00A3001E13F0001C137038
7F01FC38FF83FE387F01FC171E7F9D1A> 65 D<EAFFFEEBFF8014C0381C03E0130014F0
1470A414E01301EB07C0381FFF80A214C0381C01E0EB00F014701438A5147814F01301B5
12E014C01400151E7E9D1A> I<EB7C38EA01FF000713F8EA0F83EA1E00001C13785A1438
5AA214005AA812701438A27EA26C1370001E13F0380F83E03807FFC00001138038007C00
151E7E9D1A> I<EA7FFEB5FC6C1380381C07C0EB01E0EB00F0147014781438A2143C141C
A8143C1438A21478147014F0EB01E0EB07C0EA7FFFB512006C5A161E7F9D1A> I<B512F8
A3381C0038A41400A3130EA3EA1FFEA3EA1C0EA390C7FCA3141CA5B512FCA3161E7E9D1A
> I<B512F8A3381C0038A41400A31307A3EA1FFFA3EA1C07A390C7FCA8EAFFC0A3151E7E
9D1A> I<EBF8E0EA03FEEA07FFEA0F07EA1E03EA3C01EA38005AA3481300A6EB0FF8A3EB
00E01270A213011238EA3C03121EEA0F07EA07FFEA03FEEA00F8151E7E9D1A> I<38FF83
FEA3381C0070AA381FFFF0A3381C0070AB38FF83FEA3171E7F9D1A> I<EA7FFFB512806C
1300EA01C0B3A6EA7FFFB512806C1300111E7C9D1A> I<3801FFC05A7E38000E00B3A212
6012F0131E5BEA7FF86C5AEA0FC0121E7C9D1A> I<387F03F838FF87FC387F03F8381C01
E0EB03C01480EB07005B131E131C5B13785B7F121DEA1FDC139C130EEA1E0F7F001C1380
1303EB01C0A2EB00E0A21470007F13FC38FF81FE387F00FC171E7F9D1A> I<EA7FE012FF
127F000EC7FCB3141CA5387FFFFCB5FC7E161E7F9D1A> I<00FC137E6C13FEA2383B01B8
A31383A200391338A213C7A2EA38C613EEA2136CA2137C1338A21300A700FE13FEA3171E
7F9D1A> I<38FE03FE12FFA2381D8070A213C0121CA213E0A213601370A213301338A213
18131CA2130C130EA21306A213071303A238FF81F0A21380171E7F9D1A> I<EA0FFE383F
FF804813C0EA7C07EA700100F013E0EAE000B1EAF001A2007013C0EA7C07EA7FFF6C1380
380FFE00131E7D9D1A> I<EAFFFEEBFF8014C0381C03E0EB00F0147014781438A4147814
7014F0EB03E0381FFFC01480EBFE00001CC7FCA9B47EA3151E7E9D1A> I<EAFFFC13FF14
80381C07C0EB01E0EB00F01470A414F0EB01E0EB07C0381FFF8014001480381C07C01301
EB00E0A514E214E7A338FF807EA21438181E7F9D1A> 82 D<3803F8E0EA0FFEEA1FFFEA
3C07EA780112F0EAE000A3140012701278EA3F80EA1FF8EA07FF38007FC0EB07E0EB00F0
14701438A2126012E0A214706C13F038FE01E0B512C000EF138038E1FE00151E7E9D1A>
I<387FFFFEB5FCA238E0380EA400001300B3A23803FF80A3171E7F9D1A> I<38FF83FEA3
381C0070B3A26C13E0A2380701C013833803FF806C1300EA007C171E7F9D1A> I<38FF01
FEA3381C0070A3001E13F0000E13E0A3EA0F01000713C0A338038380A40001130013C7A3
EA00C613EEA3136C137CA21338171E7F9D1A> I<387F87F8A3380E01C0EA0703EB8380EA
0387EBC700EA01CF13EEEA00FE5B137C13781338137CA213FE13EEEA01CF13C738038780
1383380701C0A2380E00E0A2387F01FC38FF83FE387F01FC171E7F9D1A> 88
D<EAFFFCA3EAE000B3AFEAFFFCA30E2776A21A> 91 D<EAFFFCA3EA001CB3AFEAFFFCA3
0E277FA21A> 93 D<EA0180EA07C0EA1FF0EA3EF8EAF83EEAF01EEA40040F077B9D1A> I
<387FFFC0B512E0A26C13C013047D7E1A> I<EA1FF0EA3FFC487EEA780FEA3007380003
80A2137FEA07FF121FEA3F83EA7803127012E0A3EA7007EA780F383FFFFCEA1FFDEA07F0
16157D941A> 97 D<127E12FE127E120EA6133EEBFF80000F13E0EBC1F0EB8070EB0038
120E141CA7000F13381478EB80F0EBC1E0EBFFC0000E138038063E00161E7F9D1A> I<EB
FF80000313C0000F13E0EA1F01383C00C04813001270A25AA51270A2007813707E381F01
F0380FFFE0000313C03800FE0014157D941A> I<EB0FC0131F130F1301A6EA01F1EA07FD
EA0FFFEA1E0FEA3C07EA7803EA700112E0A7EA7003A2EA3807EA3E0F381FFFF83807FDFC
3801F1F8161E7E9D1A> I<EA01F8EA07FF481380381E07C0EA3C01387800E01270481370
A2B512F0A300E0C7FC1270A2007813707E381F01F0380FFFE0000313803800FE0014157D
941A> I<EB07E0EB1FF0EB3FF8EB7878EBF030EBE000A4387FFFF0B5FCA23800E000AF38
3FFF804813C06C1380151E7F9D1A> I<3801F87C3807FFFE5A381E078C381C0380383801
C0A5381C0380EA1E07381FFF005BEA39F80038C7FCA27E381FFF8014E04813F83878007C
0070131C48130EA40070131C0078133C003E13F8381FFFF0000713C00001130017217F94
1A> I<127E12FE127E120EA6133EEBFF80000F13C013C1EB80E01300120EAC387FC3FC38
FFE7FE387FC3FC171E7F9D1A> I<13C0487EA26C5A90C7FCA6EA7FE0A31200AF387FFF80
B512C06C1380121F7C9E1A> I<130C131EA2130C1300A6EA07FE120F1207EA000EB3A513
1C1260EAF038EAFFF8EA7FF0EA1FC00F2A7E9E1A> I<12FEA3120EA6EB0FFC131F130FEB
03C0EB0780EB0F00131E5B5B13FC120F13DE138F380E07801303EB01C014E0EB00F038FF
E3FEA3171E7F9D1A> I<EA7FE012FF127F1200B3A6387FFFC0B512E06C13C0131E7D9D1A
> I<387CE0E038FFFBF8EA7FFF381F1F1CEA1E1EA2EA1C1CAC387F1F1F39FFBFBF80397F
1F1F00191580941A> I<EA7E3E38FEFF80007F13C0EA0FC1EB80E01300120EAC387FC3FC
38FFE7FE387FC3FC17157F941A> I<EA01F0EA07FCEA1FFF383E0F80EA3C07387803C0EA
700138E000E0A6EAF001007013C0EA7803383C0780EA3E0F381FFF00EA07FCEA01F01315
7D941A> I<EA7E3E38FEFF80007F13E0380FC1F0EB8070EB0038120E141CA7000F133814
78EB80F0EBC1E0EBFFC0000E1380EB3E0090C7FCA8EA7FC0487E6C5A16207F941A> I<38
7F81F838FF8FFC387F9FFE3803FE1EEBF80CEBE000A25B5BAAEA7FFFB5FC7E17157F941A
> 114 D<3807FB80EA1FFF127FEA7807EAE003A30078C7FCEA7FC0EA1FFCEA07FE38003F
801307386001C012E0A2EAF00338FC0780B51200EAEFFEEAE3F812157C941A> I<487E12
03A6387FFFE0B5FCA238038000AA1470A43801C1E013FF6C1380EB3F00141C7F9B1A> I<
387E07E0EAFE0FEA7E07EA0E00AD1301EA0F033807FFFC6C13FE3800FCFC17157F941A>
I<387F83FC38FFC7FE387F83FC380E00E0A3380701C0A338038380A33801C700A3EA00EE
A3137CA2133817157F941A> I<38FF83FEA338380038A26C1370A31338137CA2380C6C60
380EEEE0A413C6000613C0EA07C71383A217157F941A> I<387FC7F8EBCFFCEBC7F83807
03C038038380EBC700EA01EFEA00FE137C13781338137C13EE120113C738038380000713
C0EA0F01387FC7FC00FF13FE007F13FC17157F941A> I<387F83FC38FFC7FE387F83FC38
0E00E0A27EEB01C0A2EA0381EB838013C31201EBC700EA00E7A213E61366136E133CA313
38A35BA2EA30F0EA78E01271EA7FC06C5A001EC7FC17207F941A> I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmr12 12 46
/Fd 46 122 df<EB1FC0EB7020EBC0103801803800031378EA0700143091C7FCA7B512F8
380700781438B2397FE1FF80192380A21B> 12 D<EA7038EAF87CEAFC7EA2EA743AEA04
02A4EA0804A2EA1008A2EA2010EA40200F0F7EA218> 34 D<127012F812FCA212741204
A41208A21210A212201240060F7CA20E> 39 D<127012F812FCA212741204A41208A212
10A212201240060F7C840E> 44 D<EAFFF8A20D02808B10> I<127012F8A3127005057C
840E> I<14801301A2EB0300A31306A35BA35BA35BA35BA35BA3485AA448C7FCA31206A3
5AA35AA35AA35AA35AA311317DA418> I<13801203120F12F31203B3A9EA07C0EAFFFE0F
217CA018> 49 D<EA03F0EA0C1CEA100700201380384003C0A2008013E012F0EAF801A3
EA2003120014C0A2EB07801400130E5B13185B5B5B485A90C7FC000213205A5A00181360
481340383FFFC05AB5FC13217EA018> I<EA03F8EA0C1EEA100F38200780004013C01278
13031307123800001380A214005B130C1338EA03F0EA001C130FEB0780A2EB03C0A214E0
1220127012F8A200F013C01240EB0780122038100F00EA0C1CEA03F013227EA018> I<13
03A25BA25B1317A21327136713471387120113071202120612041208A212101220A21240
12C0B512F838000700A7EB0F80EB7FF015217FA018> I<00101380381E0700EA1FFF5B13
F8EA17E00010C7FCA6EA11F8EA120CEA1C07381803801210380001C0A214E0A4127012F0
A200E013C01280EA4003148038200700EA1006EA0C1CEA03F013227EA018> I<127012F8
A312701200AB127012F8A3127005157C940E> 58 D<497EA3497EA3EB05E0A2EB09F013
08A2EB1078A3497EA3497EA2EBC01F497EA248B51280EB0007A20002EB03C0A348EB01E0
A348EB00F0121C003EEB01F839FF800FFF20237EA225> 65 D<903807E0109038381830
EBE0063901C0017039038000F048C7FC000E1470121E001C1430123CA2007C14101278A2
00F81400A812781510127C123CA2001C1420121E000E14407E6C6C13803901C001003800
E002EB381CEB07E01C247DA223> 67 D<B512F0380F801E00071307EC0380EC01C0EC00
E015F01578A2157C153CA3153EA9153CA2157C1578A215F015E01401EC03C0EC0700000F
131EB512F01F227EA125> I<EAFFFCEA0FC0EA0780B3ACEA0FC0EAFFFC0E227EA112> 73
D<3803FFE038001F007FB3A6127012F8A2130EEAF01EEA401C6C5AEA1870EA07C013237E
A119> I<B512F0380F803C0007130FEC078015C0140315E0A615C014071580EC0F00143C
EBFFF00180C7FCAE487EEAFFFC1B227EA121> 80 D<B512E0380F803C0007130E6E7E81
140381A55D14075D020EC7FC143CEBFFE0EB80708080141E140E140FA481A3168015C014
073A0FC003C10039FFFC01E2C8127C21237EA124> 82 D<3803F020380C0C60EA180238
3001E0EA70000060136012E0A21420A36C1300A21278127FEA3FF0EA1FFE6C7E00031380
38003FC0EB07E01301EB00F0A214707EA46C1360A26C13C07E38C8018038C60700EA81FC
14247DA21B> I<007FB512F839780780780060141800401408A300C0140C00801404A400
001400B3A3497E3801FFFE1E227EA123> I<EA0804EA1008EA2010A2EA4020A2EA8040A4
EAB85CEAFC7EA2EA7C3EEA381C0F0F7AA218> 92 D<EA1FE0EA3038EA780C130EEA3007
1200A313FFEA07C7EA1E07123C1278127000F01308A3130FEA7817383C2390380FC1E015
157E9418> 97 D<120E12FE121E120EAB131FEB61C0EB8060380F0030000E1338143C14
1C141EA7141C143C1438000F1370380C8060EB41C038083F0017237FA21B> I<EA01FEEA
0703380C0780121C383803000078C7FC127012F0A712700078134012386C1380380C0100
EA0706EA01F812157E9416> I<14E0130F13011300ABEA01F8EA0704EA0C02EA1C01EA38
001278127012F0A7127012781238EA1801EA0C0238070CF03801F0FE17237EA21B> I<EA
01FCEA0707380C0380381C01C01238007813E0EA700012F0B5FC00F0C7FCA51270007813
2012386C13406C138038070300EA00FC13157F9416> I<133E13E33801C780EA03871307
48C7FCA9EAFFF80007C7FCB27FEA7FF0112380A20F> I<14703803F198380E1E18EA1C0E
38380700A200781380A400381300A2EA1C0EEA1E1CEA33F00020C7FCA212301238EA3FFE
381FFFC06C13E0383000F0481330481318A400601330A2003813E0380E03803803FE0015
217F9518> I<120E12FE121E120EABEB1F80EB60C0EB80E0380F0070A2120EAF38FFE7FF
18237FA21B> I<121C123EA3121CC7FCA8120E127E121E120EB1EAFFC00A227FA10E> I<
13E0EA01F0A3EA00E01300A81370EA07F012001370B3A51260EAF0E013C0EA6180EA3F00
0C2C83A10F> I<120E12FE121E120EABEB03FCEB01F014C01480EB02005B5B5B133813F8
EA0F1CEA0E1E130E7F1480EB03C0130114E0EB00F014F838FFE3FE17237FA21A> I<120E
12FE121E120EB3ADEAFFE00B237FA20E> I<390E1FC07F3AFE60E183803A1E807201C03A
0F003C00E0A2000E1338AF3AFFE3FF8FFE27157F942A> I<380E1F8038FE60C0381E80E0
380F0070A2120EAF38FFE7FF18157F941B> I<EA01FCEA0707380C0180381800C0003813
E0481370A200F01378A700701370007813F0003813E0381C01C0380E038038070700EA01
FC15157F9418> I<EA0E1F38FE61C0381E8060380F0070000E1338143CA2141EA7143CA2
1438000F1370380E80E0EB41C0EB3F0090C7FCA9EAFFE0171F7F941B> I<EA0E3CEAFE46
EA1E8FEA0F0F13061300120EAD120FEAFFF010157F9413> 114 D<EA0F88EA3078EA6018
12C01308A212E0EAF000127FEA3FE0EA0FF0EA01F8EA003CEA801C130CA212C01308EAE0
18EAD030EA8FC00E157E9413> I<1202A41206A3120E121E123EEAFFFCEA0E00AB1304A6
EA07081203EA01F00E1F7F9E13> I<000E137038FE07F0EA1E00000E1370AD14F0A23806
0170380382783800FC7F18157F941B> I<38FF80FE381E00781430000E1320A26C1340A2
EB80C000031380A23801C100A2EA00E2A31374A21338A3131017157F941A> I<39FF8FF8
7F393E01E03C001CEBC01814E0000E1410EB0260147000071420EB04301438D803841340
EB8818141CD801C81380EBD00C140E3900F00F00497EA2EB6006EB400220157F9423> I<
38FF80FE381E00781430000E1320A26C1340A2EB80C000031380A23801C100A2EA00E2A3
1374A21338A31310A25BA35B12F05B12F10043C7FC123C171F7F941A> 121
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmr12 14.4 17
/Fe 17 119 df<127812FCA212FEA2127A1202A41204A31208A212101220124007127B85
10> 44 D<137E3801C380380700E0000E1370001E1378001C1338003C133CA20038131C
0078131EA400F8131FAF0078131EA4007C133E003C133CA2001C1338001E1378000E1370
6C13E03801C38038007E0018297EA71D> 48 D<132013E01201120F12FF12F11201B3AD
487EB512C0A212287BA71D> I<EA01FCEA07FF380C0FC0381803E0382001F01260384000
F8A200F813FC7E147CA3007813FCC7FC14F8A2EB01F0A2EB03E014C0EB07801400130E5B
5B13305B5B485A3803000412024813085A5A481318383FFFF84813F0B5FCA216287DA71D
> I<13FE3803FFC0380703E0380C01F0381000F8123C003E13FC147CA2001E13FC120CC7
12F8A214F0EB01E014C0EB0380EB0E00EA01FE380003C0EB00E014F81478147C143EA214
3FA21230127812FCA2143E5A0040137E147C003013F86C13F0380F03E03803FFC03800FE
0018297EA71D> I<1460A214E01301A21303A213051309A213111321A213411381A2EA01
011202A212041208A2121012301220124012C0B6FCA2380001E0A8EB03F0EB3FFFA21828
7EA71D> I<00181330001E13E0EA1FFF14C014005BEA11F00010C7FCA813FCEA13073814
01C0001813E0EA1000C712F01478A3147CA3127012F8A314781280004013F814F0126038
3001E0381803C0380E0F803807FE00EA01F816297DA71D> I<127812FCA412781200AE12
7812FCA41278061A7B9910> 58 D<D8FFE0EB3FFE7FD803F8EB03E00002EC01C0017CEB
0080137E133E7FA26D7E8013076D7E8013016D7E80147C80143F80EC0F8015C01407EC03
E015F01401EC00F8A2157C157E153E151FA2150F1507A200071403486C1301EAFFF81500
27297EA82C> 78 D<EAFF80A3EAE000B3B3B2EAFF80A3093C7BAC10> 91
D<EAFF80A31203B3B3B212FFA3093C7FAC10> 93 D<120FB4FCA2121F7EACEB07E0EB18
38EB600EEB8007158090380003C0A2EC01E0A215F0A715E0A2140315C01580EB8007000E
EB0F00EB401C380C303838080FC01C2A7EA921> 98 D<13FC38038780380701C0000E13
E0EA1C00003C13F0A2481378A212F8A2B512F800F8C7FCA51278A26C1308A26C1310000E
13206C13403801C18038007E00151A7E991A> 101 D<3A0F07F007F03AFF183818389039
201C201C3A1F400E400E000F010F130F01801380A201001300B13BFFF0FFF0FFF0A22C1A
7E9931> 109 D<137E3803C3C0380700E0000E1370481338003C133CA248131EA200F813
1FA80078131EA26C133CA2001C13386C13706C13E03803C3C038007E00181A7E991D>
111 D<380F0F8038FF11C0EB23E0EA1F43EA0F83EB81C0EB800090C7FCB07FEAFFFCA213
1A7E9917> 114 D<39FFF01FF0A2390F8007800007EB03001402A26C6C5AA2EBE00C0001
1308A26C6C5AA2EBF830EB7820A26D5AA2EB3EC0EB1E80A26DC7FCA31306A21C1A7F991F
> 118 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmr17 20.74 19
/Ff 19 122 df<00381370007C13F838FE01FCA200FF13FE387D00FA0039137200011302
A600021304A3481308A2481310A2481320A248134048138017187DBB27> 34
D<007FB812C0A2903AC003FC003F277E0001F8130F007C160300781601127017001260A2
00E017E0A2481760A7C71600B3B3EC07FE0107B512FEA2333B7DBA39> 84
D<00021304481308481310A2481320A2481340A2481380A338800100A6009C133800BE13
7C00FF13FEEA7F00A2003E137C001C1338171873BB27> 92 D<EB3F803801C0F0380300
3C00047F000C7F486D7E001C80003E1303003F80A3121EC7FCA3143FEB0FF3EB7E03EA01
F8EA03E0EA0FC0EA1F80EA3F00123E127E16605AA31407A2007C130B127E003E903811F0
C06C13603A07C1807F803A00FE003E0023257CA427> 97 D<EA03E012FFA212071203B3
EC3FC0ECE0789038E3001C01E6130F01E8EB078001F8EB03C049EB01E04914F0150016F8
A216FC167CA2167EA9167CA216FC16F8A2ED01F016E06D130301D814C001C8EB07800184
EB0E0001835B903881C0F09038003F80273C7EBB2C> I<ED0F80EC03FFA2EC001F150FB3
EB03F8EB1E07903870018F9038E0004FD803C0132F4848131F120F90C7120F5A123EA212
7E127CA212FCA9127CA2127E123EA2121E121F6C141F6C6C133F6C6C136F6C6C13CF3A00
70018FC090393C0E0FFEEB07F0273C7DBB2C> 100 D<EB07F8EB3C1E9038F007803901C0
03C00003EB01E039078000F048C712F8481478001E147C123EA2007E143E127CA212FCA2
B612FE00FCC8FCA6127CA2127E123E15067E6C140C7F000714186C6C1330C66C13600170
13C090381E0700EB03FC1F257EA423> I<14FCEB078390380E038090381C07C0EB3C0F13
7813F8EC078049C7FC1201AEB512FCA2D801F0C7FCB3AE487E387FFFE0A21A3C7FBB18>
I<ED07C090390FE018609039383820709039F01E40F03901E00F802603C00713600007EC
C00048486C7EA3001F80A6000F5CA36C6C485A00035C6C6C48C7FC3802F01EEB38383806
0FE00004C9FCA2120CA2120EA27E7F6CB5FC15F06C14FC6C8039078000FF000EC7EA1F80
48EC07C048140312780070EC01E012F0A50078EC03C000381580003C14076CEC0F000007
141CD803C0137839007803C0D90FFEC7FC24387EA527> I<EA03E012FFA212071203B3EC
1FE0EC607CEC801E9038E3000F01E41480A201E8130716C013F0A25BB3A6486CEB0FE0B5
0081B5FCA2283C7EBB2C> I<EA07C012FFA2120F1207B3B3B1EA0FE0EAFFFEA20F3C7DBB
15> 108 D<2703E01FE0EB3FC000FFD9607CEBC0F8913A801E01003C2807E3000F067FD8
03E40288131FA201E8D907907F04D0148001F014E0A2495CB3A6486C496CEB1FC0B50081
B53803FFFEA23F257EA443> I<EB07FCEB1C0790387001C03901E000F04848137848487F
48C77E48141F001E80003E1580A248EC07C0A300FC15E0A9007C15C0A2007E140F003E15
80A2001E1500001F5C6C141E6C6C5B6C6C5B6C6C5B39007001C0D91C07C7FCEB07FC2325
7EA427> 111 D<3903E03FC000FFEBE0789038E3001CD807E6130FD803E8EB078001F8EB
03C04914E049EB01F0A2ED00F8A216FCA2167C167EA9167C16FCA216F8150116F0ED03E0
7F6DEB07C001E8EB0F8001E4EB0E0001E3133C9038E1C0F09038E03F8091C8FCAE487EB5
7EA227367EA42C> I<3803E03E00FF13C39038E107803907E20FC0EA03E413E8EC0780EC
030001F0C7FCA35BB3A5487EB512C0A21A257EA41E> 114 D<EBFF02380700C6000C132E
0010131E123048130EA200E01306A37E7E6C90C7FC127FEA3FF0EBFF80000F13E06C7F00
0113FC38003FFE1301EB003F00C07FEC0F8014076C1303A46C1400A26C5B140600E45B00
E25B38C1807038807F8019257DA41F> I<D803E0EB07C000FFEB01FFA20007EB000F0003
1407B3A5150FA300011417A26C6C132715470178EB87E090391E0307FFEB03FC28257EA4
2C> 117 D<D8FFFEEB3FFEA2D807FCEB1FF06C48EB0F80000192C7FC0000140E017C5B01
7E13186D5B6D5B90380F80E0ECC1C0903807E180D903E3C8FC14F7EB01FE6D5A147C147E
147FA2ECCF8001017F90380387E0EB070390380601F0010C7F90381C00FC49137C01307F
49133F01E06D7E0001140F000781D81FF0EB1FF0B46C90387FFF80A229257FA42A> 120
D<D8FFFEEB0FFFA2D807F0EB07F86C48EB03E0ED01C06C7E16807F0000EC0300A2017C13
06A2137E013E5BA2013F131C6D1318A26D6C5AA2ECC07001071360A26D6C5AA214F10101
5BA2D900FBC7FCA214FF147EA2143CA31418A25CA35CA214E05C1218383C0180127E49C8
FCA2EA7C06EA300CEA1C38EA07E028367FA42A> I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin
%%PaperSize: a4
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Ff 267 488 a(The) 27 b(usage) g(of) f
(\\dualgraph") j(b) n(y) d(examples) p Fe 694 752 a(No) n(v) n(em) n(b)
r(er) 20 b(12,) g(2005) p Fd 188 939 a(1.) 25 b(Do) o(wnload) 17
b(Risa/Asir) f(from) p Fc 15 w(http://www) o(.ma) o(th.) o(ko) o(be-) o
(u.a) o(c.j) o(p/) o(Asi) o(r/) p Fd 188 1101 a(2.) 25
b(Install) 15 b(Risa/Asir) h(according) h(to) f(man) o(ual.) 188
1263 y(3.) 25 b(Carry) 16 b(out) h(Asir.) 202 1377 y(The) 11
b(pac) o(k) m(age) g(is) f(the) h(\014le) p Fc 10 w(dualgraph.r) o(r) p
Fd 8 w(in) f(the) h(directory) f('asir-con) o(trib/fj) p
1633 1377 15 2 v 17 w(curv) o(e'.) 202 1437 y(A) o(tten) o(tion:) 20
b(The) c(\014le) f(\\) p Fc(dualgraph.rr) p Fd -1 w(") f(con) o(tains) i
(Japanese) h(jis) f(co) q(de.) p Fc 129 1550 a(This) 24
b(is) h(Risa/Asir) o(,) e(Version) g(20051106) f(\(Kobe) i(Distributio)
o(n\).) 129 1611 y(Copyright) e(\(C\)) j(1994-2000) o(,) e(all) h
(rights) f(reserved,) g(FUJITSU) g(LABORATORI) o(ES) f(LIMITED.) 129
1671 y(Copyright) g(2000-2005,) g(Risa/Asir) g(committers,) g
(http://www) o(.op) o(en) o(xm.) o(org) o(/.) 129 1731
y(GC) j(6.5) f(Copyright) e(1988-2005,) g(H-J.) j(Boehm,) e(A.) i(J.) g
(Demers,) e(Xerox,) g(SGI,) h(HP.) 129 1791 y(PARI) g(2.0.17,) f
(copyright) f(1989-1999,) g(C.) j(Batut,) f(K.) g(Belabas,) f(D.) i
(Bernardi,) 206 1851 y(H.) f(Cohen) g(and) h(M.) g(Olivier.) 129
1912 y(Debug) e(windows) h(of) g(ox) h(servers) e(will) i(not) f(be) h
(opened.) e(Set) i(Xm_noX=0) d(to) j(open) f(it.) 129
1972 y(OpenXM/Ri) o(sa/) o(Asi) o(r-) o(Con) o(tri) o(b\(2) o(00) o
(403) o(02\)) o(,) e(Copyright) h(2000-2004,) f(OpenXM.or) o(g) h
(committer) o(s) 129 2032 y(ox_help\(0) o(\);) f(ox_help\("ke) o(ywo) o
(rd) o("\);) g(ox_grep\("k) o(eyw) o(or) o(d"\)) o(;) 257
2092 y(for) i(help) h(messages) d(\(unix) i(version) f(only\).) 129
2152 y(http://ww) o(w.m) o(ath) o(.k) o(obe) o(-u.) o(ac.) o(jp) o(/Op)
o(enX) o(M/) o(Cur) o(ren) o(t/d) o(oc) o(/in) o(dex) o(-do) o(c.) o
(htm) o(l) 129 2213 y([1217]) g(load\("gr"\)) o($) 129
2273 y([1323]) g(load\("sp"\)) o($) 129 2333 y([1425]) g(load\("fj_c) o
(urv) o(e/d) o(ual) o(gr) o(aph) o(.rr) o("\)) o($) 129
2393 y([1479]) g(dual_graph) o(\(\(y) o(^2-) o(x^3) o(\)^) o(2-y) o
(^7\)) o($) 129 2453 y(***) h(Newton) g(Polygon) f(***) 129
2513 y([[0,4],[6) o(,0]) o(]) 129 2574 y([[0,2],[9) o(,0]) o(]) 129
2634 y(*****) g(Dual) i(Graph) e(*****) 129 2694 y([3,[2,b1]) o(,2]) p
Fd 926 2819 a(1) p dyy eop end
%%Page: 2 2
TeXDict begin 2 1 bop Fc 129 286 a(b1:[2,2,2) o(,3,) o([1,) o(b2) o
(],2) o(]) 129 347 y(b2:*) 129 407 y([1480]) p Fd 202
521 a(This) 16 b(result) g(means) f(follo) o(wing) h(dual) h(graph.) 253
1125 y
 /PSfrag where{pop(-1)[[0(Bl)1 0]](-2)[[1(Bl)1 0]](-3)[[2(Bl)1 0]](-5)[[3(Bl)1
0]](*)[[4(Bl)1 0]]5 0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 253 1125 a @beginspecial 43 @llx 621 @lly 426
@urx 786 @ury 1417 @rhi @clip @setspecial
%%BeginDocument: g-dual1.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Mayura Draw, Version 3.0
%%Title: g-dual1.eps
%%CreationDate: Thu Mar 25 00:27:25 1999
%%BoundingBox: 43 621 426 786
%%DocumentFonts: TimesNewRomanPSMT
%%Orientation: Portrait
%%EndComments
%%BeginProlog
%%BeginResource: procset MayuraDraw_ops
%%Version: 2.1
%%Copyright: (c) 1993-98 Mayura Software
/PDXDict 100 dict def
PDXDict begin
% width height matrix proc key cache
% definepattern -\> font
/definepattern { %def
  7 dict begin
    /FontDict 9 dict def
    FontDict begin
      /cache exch def
      /key exch def
      /proc exch cvx def
      /mtx exch matrix invertmatrix def
      /height exch def
      /width exch def
      /ctm matrix currentmatrix def
      /ptm matrix identmatrix def
      /str
      (12345678901234567890123456789012)
      def
    end
    /FontBBox [ %def
      0 0 FontDict /width get
      FontDict /height get
    ] def
    /FontMatrix FontDict /mtx get def
    /Encoding StandardEncoding def
    /FontType 3 def
    /BuildChar { %def
      pop begin
      FontDict begin
        width 0 cache { %ifelse
          0 0 width height setcachedevice
        }{ %else
          setcharwidth
        } ifelse
        0 0 moveto width 0 lineto
        width height lineto 0 height lineto
        closepath clip newpath
        gsave proc grestore
      end end
    } def
    FontDict /key get currentdict definefont
  end
} bind def

% dict patternpath -
% dict matrix patternpath -
/patternpath { %def
  dup type /dicttype eq { %ifelse
    begin FontDict /ctm get setmatrix
  }{ %else
    exch begin FontDict /ctm get setmatrix
    concat
  } ifelse
  currentdict setfont
  FontDict begin
    FontMatrix concat
    width 0 dtransform
    round width div exch round width div exch
    0 height dtransform
    round height div exch
    round height div exch
    0 0 transform round exch round exch
    ptm astore setmatrix

    pathbbox
    height div ceiling height mul 4 1 roll
    width div ceiling width mul 4 1 roll
    height div floor height mul 4 1 roll
    width div floor width mul 4 1 roll

    2 index sub height div ceiling cvi exch
    3 index sub width div ceiling cvi exch
    4 2 roll moveto

    FontMatrix ptm invertmatrix pop
    { %repeat
      gsave
        ptm concat
        dup str length idiv { %repeat
          str show
        } repeat
        dup str length mod str exch
        0 exch getinterval show
      grestore
      0 height rmoveto
    } repeat
    pop
  end end
} bind def

% dict patternfill -
% dict matrix patternfill -
/patternfill { %def
  gsave
    clip patternpath
  grestore
  newpath
} bind def

/img { %def
  gsave
  /imgh exch def
  /imgw exch def
  concat
  imgw imgh 8
  [imgw 0 0 imgh neg 0 imgh]
  /colorstr 768 string def
  /colorimage where {
    pop
    { currentfile colorstr readhexstring pop }
    false 3 colorimage
  }{
    /graystr 256 string def
    {
      currentfile colorstr readhexstring pop
      length 3 idiv
      dup 1 sub 0 1 3 -1 roll
      {
        graystr exch
        colorstr 1 index 3 mul get 30 mul
        colorstr 2 index 3 mul 1 add get 59 mul
        colorstr 3 index 3 mul 2 add get 11 mul
        add add 100 idiv
        put
      } for
      graystr 0 3 -1 roll getinterval
    } image
  } ifelse
  grestore
} bind def

/arrowhead {
  gsave
    [] 0 setdash
    strokeC strokeM strokeY strokeK setcmykcolor
    2 copy moveto
    4 2 roll exch 4 -1 roll exch
    sub 3 1 roll sub
    exch atan rotate dup scale
    arrowtype
    dup 0 eq {
      -1 2 rlineto 7 -2 rlineto -7 -2 rlineto
      closepath fill
    } if
    dup 1 eq {
      0 3 rlineto 9 -3 rlineto -9 -3 rlineto
      closepath fill
    } if
    dup 2 eq {
      currentpoint -6 -6 rmoveto lineto -6 6 rlineto
      2 setlinewidth stroke
    } if
    pop
  grestore
} bind def

/setcmykcolor where { %ifelse
  pop
}{ %else
  /setcmykcolor {
     /black exch def /yellow exch def
     /magenta exch def /cyan exch def
     cyan black add dup 1 gt { pop 1 } if 1 exch sub
     magenta black add dup 1 gt { pop 1 } if 1 exch sub
     yellow black add dup 1 gt { pop 1 } if 1 exch sub
     setrgbcolor
  } bind def
} ifelse

/RE { %def
  findfont begin
  currentdict dup length dict begin
    { %forall
      1 index /FID ne { def } { pop pop } ifelse
    } forall
    /FontName exch def dup length 0 ne { %if
      /Encoding Encoding 256 array copy def
      0 exch { %forall
        dup type /nametype eq { %ifelse
          Encoding 2 index 2 index put
          pop 1 add
        }{ %else
          exch pop
        } ifelse
      } forall
    } if pop
  currentdict dup end end
  /FontName get exch definefont pop
} bind def

/spacecount { %def
  0 exch
  ( ) { %loop
    search { %ifelse
      pop 3 -1 roll 1 add 3 1 roll
    }{ pop exit } ifelse
  } loop
} bind def

/WinAnsiEncoding [
  39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase
  /ellipsis/dagger/daggerdbl/circumflex/perthousand
  /Scaron/guilsinglleft/OE 145/quoteleft/quoteright
  /quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/dotlessi
  159/Ydieresis 164/currency 166/brokenbar 168/dieresis/copyright
  /ordfeminine 172/logicalnot 174/registered/macron/ring
  177/plusminus/twosuperior/threesuperior/acute/mu
  183/periodcentered/cedilla/onesuperior/ordmasculine
  188/onequarter/onehalf/threequarters 192/Agrave/Aacute
  /Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
  /Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute
  /Ocircumflex/Otilde/Odieresis/multiply/Oslash
  /Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
  /germandbls/agrave/aacute/acircumflex/atilde/adieresis
  /aring/ae/ccedilla/egrave/eacute/ecircumflex
  /edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde
  /odieresis/divide/oslash/ugrave/uacute/ucircumflex
  /udieresis/yacute/thorn/ydieresis
] def

/patarray [
/leftdiagonal /rightdiagonal /crossdiagonal /horizontal
/vertical /crosshatch /fishscale /wave /brick
] def
/arrowtype 0 def
/fillC 0 def /fillM 0 def /fillY 0 def /fillK 0 def
/strokeC 0 def /strokeM 0 def /strokeY 0 def /strokeK 1 def
/pattern -1 def
/mat matrix def
/c /curveto load def
/C /curveto load def
/e { gsave concat 0 0 moveto } bind def
/F {
  pattern -1 eq { %ifelse
    fillC fillM fillY fillK setcmykcolor fill
  }{ %else
    gsave fillC fillM fillY fillK setcmykcolor fill grestore
    0 0 0 1 setcmykcolor
    patarray pattern get findfont patternfill
  } ifelse
} bind def
/f { closepath F } bind def
/K { /strokeK exch def /strokeY exch def
     /strokeM exch def /strokeC exch def } bind def
/k { /fillK exch def /fillY exch def
     /fillM exch def /fillC exch def } bind def
/L /lineto load def
/m /moveto load def
/n /newpath load def
/N /newpath load def
/S { strokeC strokeM strokeY strokeK setcmykcolor stroke } bind def
/s { closepath S } bind def
/Tx { fillC fillM fillY fillK setcmykcolor show
      0 leading neg translate 0 0 moveto } bind def
/t { %def
  fillC fillM fillY fillK setcmykcolor
  align dup 0 eq { %ifelse
    pop show
  }{ %else
    dup 1 eq { %ifelse
      pop dup stringwidth pop 2 div neg 0 rmoveto show
    }{ %else
      dup 2 eq { %ifelse
        pop dup stringwidth pop neg 0 rmoveto show
      }{ %else
        pop
        dup stringwidth pop jwidth exch sub
        1 index spacecount
        dup 0 eq { %ifelse
          pop pop show
        }{ %else
          div 0 8#040 4 -1 roll widthshow
        } ifelse
      } ifelse
    } ifelse
  } ifelse
  0 leading neg translate 0 0 moveto
} bind def
/T { grestore } bind def
/TX { pop } bind def
/tbx { pop exch pop sub /jwidth exch def } def
/u {} def
/U {} def
/w /setlinewidth load def
/d /setdash load def
/B { gsave F grestore S } bind def
/b { closepath B } bind def
/z { /align exch def pop /leading exch def exch findfont
     exch scalefont setfont } bind def
/Pat { /pattern exch def } bind def
/At { /arrowtype exch def } bind def
/Ln {
  mat currentmatrix pop
    concat
    /y1 exch def /x1 exch def /y2 exch def /x2 exch def
    dup 2 mod 1 eq { currentlinewidth x2 y2 x1 y1 arrowhead } if
    2 idiv 1 eq { currentlinewidth x1 y1 x2 y2 arrowhead } if
    x1 y1 moveto x2 y2 lineto
  mat setmatrix
} bind def
/Ar {
  mat currentmatrix pop
    concat translate scale 0 0 1 5 -2 roll arc
  mat setmatrix
} bind def
/Pi {
  mat currentmatrix pop
    concat translate scale
    0 0 moveto 0 0 1 5 -2 roll arc closepath
  mat setmatrix
} bind def
/Bx {
  mat currentmatrix pop
    concat /y1 exch def /x1 exch def /y2 exch def /x2 exch def
    x1 y1 moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
  mat setmatrix
} bind def
/Ov {
  mat currentmatrix pop
    concat translate scale 0 0 1 0 360 arc
  mat setmatrix
} bind def
end
%%EndResource
%%EndProlog
%%BeginSetup
%PDX g 18 18 1 0
%%IncludeFont: TimesNewRomanPSMT
PDXDict begin
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
/_PDX_savepage save def

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 setlinecap
  7.5 0 moveto 15 7.5 lineto
  0 7.5 moveto 7.5 15 lineto
  2 setlinewidth stroke
} bind
/rightdiagonal true definepattern pop

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 setlinecap
  7.5 0 moveto 0 7.5 lineto
  15 7.5 moveto 7.5 15 lineto
  2 setlinewidth stroke
} bind
/leftdiagonal true definepattern pop

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 setlinecap
  0 7.5 moveto 15 7.5 lineto
  2 setlinewidth stroke
} bind
/horizontal true definepattern pop

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 setlinecap
  7.5 0 moveto 7.5 15 lineto
  2 setlinewidth stroke
} bind
/vertical true definepattern pop

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 setlinecap
  0 7.5 moveto 15 7.5 lineto
  7.5 0 moveto 7.5 15 lineto
  2 setlinewidth stroke
} bind
/crosshatch true definepattern pop

30 30 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 setlinecap
  0 7.5 moveto 30 7.5 lineto
  0 22.5 moveto 30 22.5 lineto
  7.5 0 moveto 7.5 7.5 lineto
  7.5 22.5 moveto 7.5 30 lineto
  22.5 7.5 moveto 22.5 22.5 lineto
  1 setlinewidth stroke
} bind
/brick true definepattern pop

30 30 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 2 scale
  2 setlinecap
  7.5 0 moveto 15 7.5 lineto
  0 7.5 moveto 7.5 15 lineto
  7.5 0 moveto 0 7.5 lineto
  15 7.5 moveto 7.5 15 lineto
  0.5 setlinewidth stroke
} bind
/crossdiagonal true definepattern pop

30 30 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 2 scale
  1 setlinecap
  0 7.5 moveto 0 15 7.5 270 360 arc
  7.5 15 moveto 15 15 7.5 180 270 arc
  0 7.5 moveto 7.5 7.5 7.5 180 360 arc
  0.5 setlinewidth stroke
} bind
/fishscale true definepattern pop

30 30 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  1 setlinecap 0.5 setlinewidth
  7.5 0 10.6 135 45 arcn
  22.5 15 10.6 225 315 arc
  stroke
  7.5 15 10.6 135 45 arcn
  22.5 30 10.6 225 315 arc
  stroke
} bind
/wave true definepattern pop

WinAnsiEncoding /_TimesNewRomanPSMT /TimesNewRomanPSMT RE

newpath 0 setlinecap 0 setlinejoin 10 setmiterlimit
1 setlinewidth [] 0 setdash
%%EndPageSetup
6.80074 6.80074 14.5 770.75 [1 0 0 1 58.68 -31.96] Ov
s
0 61.4763 770.892 21.5 770.75 [1 0 0 1 58.68 -32.35] Ln
S
6.80074 6.80074 14.5 770.75 [1 0 0 1 112.8 -32.58] Ov
s
0 61.4763 770.892 21.5 770.75 [1 0 0 1 111.9 -31.79] Ln
S
6.80074 6.80074 14.5 770.75 [1 0 0 1 166.4 -32.03] Ov
s
1 1 1 0 k
/_TimesNewRomanPSMT 18 19 0 0 z
[1 0 0 1 172.5 751.8] e
24.0705 -3.888 0 16.038 tbx
(-2) t
T
[1 0 0 1 62.38 751.9] e
40.009 -3.888 0 16.038 tbx
(-3) t
T
0 0 0 0 k
6.80074 6.80074 14.5 770.75 [-1 0 0 -1 410.3 1455] Ov
s
0 61.4763 770.892 21.5 770.75 [-1 0 0 -1 410.3 1455] Ln
S
6.80074 6.80074 14.5 770.75 [-1 0 0 -1 356.2 1456] Ov
s
0 61.4763 770.892 21.5 770.75 [-1 0 0 -1 357 1455] Ln
S
6.80074 6.80074 14.5 770.75 [-1 0 0 -1 302.6 1455] Ov
s
0 61.4763 770.892 21.5 770.75 [0 1 -1 0 897.9 669.8] Ln
S
1 1 1 0 k
[1 0 0 1 116.6 751.6] e
19.3802 -3.888 0 16.038 tbx
(-2) t
T
[1 0 0 1 388.4 695.2] e
19.3802 -3.888 0 16.038 tbx
(-2) t
T
[1 0 0 1 280.9 695.2] e
40.009 -3.888 0 16.038 tbx
(-3) t
T
[1 0 0 1 334.6 695.1] e
32.1539 -3.888 0 16.038 tbx
(-1) t
T
0 17.9301 726.759 17.9301 749.604 [1 0 0 1 323.2 -71.58] Ln
S
[1 0 0 1 334.2 643.4] e
16.3315 -3.888 0 16.038 tbx
(*) t
T
0 0 0 0 k
6.80074 6.80074 14.5 770.75 [1 0 0 1 112.2 -87] Ov
s
0 61.4763 770.892 21.5 770.75 [1 0 0 1 112.2 -87.4] Ln
S
6.80074 6.80074 14.5 770.75 [1 0 0 1 166.3 -87.6] Ov
s
0 61.4763 770.892 21.5 770.75 [1 0 0 1 165.4 -86.8] Ln
S
6.80074 6.80074 14.5 770.75 [1 0 0 1 219.9 -87] Ov
s
1 1 1 0 k
[1 0 0 1 230.8 695.8] e
24.0705 -3.888 0 16.038 tbx
(-2) t
T
[1 0 0 1 174.9 695.6] e
19.3802 -3.888 0 16.038 tbx
(-2) t
T
[1 0 0 1 129.5 696.3] e
19.3802 -3.888 0 16.038 tbx
(-2) t
T
0 61.4763 770.892 21.5 770.75 [1 0 0 1 220.1 -86.9] Ln
S
%%PageTrailer
_PDX_savepage restore
%%Trailer
end
showpage
%%EOF

%%EndDocument
@endspecial 253 1125 a
 /End PSfrag
 253 1125 a 253 770 a
 /Hide PSfrag
 253 770 a
Fd -182 805 a(PSfrag) g(replacemen) o(ts) p -182 822
435 2 v 253 824 a
 /Unhide PSfrag
 253 824 a 190 881 a
  {
 190 881 a Fb(\000) p
Fd(1) 190 881 y
  } 0/Place PSfrag
 190 881 a 190 941 a
  {
 190 941 a Fb(\000) p
Fd(2) 190 941 y
  } 1/Place PSfrag
 190 941 a 190 1001 a
  {
 190 1001 a Fb(\000) p
Fd(3) 190 1001 y
  } 2/Place PSfrag
 190 1001 a 190 1061 a
  {
 190 1061 a Fb(\000) p
Fd(5) 190 1061 y
  } 3/Place PSfrag
 190 1061 a 228 1125 a
  {
 228 1125 a Fb(\003) 228
1125 y
  } 4/Place PSfrag
 228 1125 a Fc 129 1240 a([194]) 23 b(F=\(\(x^2-y^5) o(\)^2) o
(-x^) o(5\)*) o(\(\() o(-x^) o(2+y) o(^3) o(\)^2) o(-y^) o(9\)) 129
1300 y(*\(\(x^2+y^) o(3\)^) o(2-x) o(^7) o(\)*\() o(x^4) o(+y^) o(5\)) o
($) 129 1360 y([195]) g(dual_graph\() o(F\)$) 129 1420
y(***) h(Newton) g(Polygon) f(***) 129 1480 y([[0,27],[) o(4,1) o(7],) o
([1) o(2,5) o(],[) o(16,) o(0]) o(]) 129 1540 y([[0,2],[5) o(,0]) o(])
129 1601 y([[0,2],[6) o(,0]) o(]) 129 1661 y([[0,2],[9) o(,0]) o(]) 129
1721 y(*****) g(Dual) i(graph) e(*****) 129 1781 y([2,[2,b1]) o(,4,) o
([4,) o(b2) o(,b3) o(],2) o(,[1) o(,b) o(4],) o(5]) 129
1841 y(b1:[2,3,[) o(1,b) o(5],) o(2]) 129 1902 y(b5:*) 129
1962 y(b2:[2,2,[) o(1,b) o(6,b) o(7]) o(]) 129 2022 y(b6:*) 129
2082 y(b7:*) 129 2142 y(b3:[2,2,2) o(,3,) o([1,) o(b8) o(],2) o(]) 129
2203 y(b8:*) 129 2263 y(b4:*) p Fd 202 2377 a(\\b1,b2,b3,b4") 17
b(mean) f(another) g(branc) o(hes) h(from) e(these) h(v) o(erticies.) p
Fe 566 2491 a([2,[2,b1],4,[4,b2,b3],2) q(,[1,) q(b4],5]) p
Fa 919 2563 a(~) 919 2593 y(\177) p Fd 926 2819 a(2) p
dyy eop end
%%Page: 3 3
TeXDict begin 3 2 bop 330 650 a
 /PSfrag where{pop(-1)[[0(Bl)1 0]](-2)[[1(Bl)1 0]](-3)[[2(Bl)1 0]](-5)[[3(Bl)1
0]](*)[[4(Bl)1 0]](b1)[[5(Bl)1 0]](b2)[[6(Bl)1 0]](b3)[[7(Bl)1 0]](b4)[[8(Bl)1
0]]9 0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 330 650 a @beginspecial
28 @llx 638 @lly 419 @urx 771 @ury 992 @rhi @clip @setspecial
%%BeginDocument: ex2dual1.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Mayura Draw, Version 3.0
%%Title: ex2dual1.eps
%%CreationDate: Sun Aug 09 18:18:57 1998
%%BoundingBox: 28 638 419 771
%%DocumentFonts: NimbusRomNo9L-Medi
%%+ TimesNewRomanPSMT
%%Orientation: Portrait
%%EndComments
%%BeginProlog
%%BeginResource: procset MayuraDraw_ops
%%Version: 2.1
%%Copyright: (c) 1993-98 Mayura Software
/PDXDict 100 dict def
PDXDict begin
% width height matrix proc key cache
% definepattern -\> font
/definepattern { %def
  7 dict begin
    /FontDict 9 dict def
    FontDict begin
      /cache exch def
      /key exch def
      /proc exch cvx def
      /mtx exch matrix invertmatrix def
      /height exch def
      /width exch def
      /ctm matrix currentmatrix def
      /ptm matrix identmatrix def
      /str
      (12345678901234567890123456789012)
      def
    end
    /FontBBox [ %def
      0 0 FontDict /width get
      FontDict /height get
    ] def
    /FontMatrix FontDict /mtx get def
    /Encoding StandardEncoding def
    /FontType 3 def
    /BuildChar { %def
      pop begin
      FontDict begin
        width 0 cache { %ifelse
          0 0 width height setcachedevice
        }{ %else
          setcharwidth
        } ifelse
        0 0 moveto width 0 lineto
        width height lineto 0 height lineto
        closepath clip newpath
        gsave proc grestore
      end end
    } def
    FontDict /key get currentdict definefont
  end
} bind def

% dict patternpath -
% dict matrix patternpath -
/patternpath { %def
  dup type /dicttype eq { %ifelse
    begin FontDict /ctm get setmatrix
  }{ %else
    exch begin FontDict /ctm get setmatrix
    concat
  } ifelse
  currentdict setfont
  FontDict begin
    FontMatrix concat
    width 0 dtransform
    round width div exch round width div exch
    0 height dtransform
    round height div exch
    round height div exch
    0 0 transform round exch round exch
    ptm astore setmatrix

    pathbbox
    height div ceiling height mul 4 1 roll
    width div ceiling width mul 4 1 roll
    height div floor height mul 4 1 roll
    width div floor width mul 4 1 roll

    2 index sub height div ceiling cvi exch
    3 index sub width div ceiling cvi exch
    4 2 roll moveto

    FontMatrix ptm invertmatrix pop
    { %repeat
      gsave
        ptm concat
        dup str length idiv { %repeat
          str show
        } repeat
        dup str length mod str exch
        0 exch getinterval show
      grestore
      0 height rmoveto
    } repeat
    pop
  end end
} bind def

% dict patternfill -
% dict matrix patternfill -
/patternfill { %def
  gsave
    clip patternpath
  grestore
  newpath
} bind def

/img { %def
  gsave
  /imgh exch def
  /imgw exch def
  concat
  imgw imgh 8
  [imgw 0 0 imgh neg 0 imgh]
  /colorstr 768 string def
  /colorimage where {
    pop
    { currentfile colorstr readhexstring pop }
    false 3 colorimage
  }{
    /graystr 256 string def
    {
      currentfile colorstr readhexstring pop
      length 3 idiv
      dup 1 sub 0 1 3 -1 roll
      {
        graystr exch
        colorstr 1 index 3 mul get 30 mul
        colorstr 2 index 3 mul 1 add get 59 mul
        colorstr 3 index 3 mul 2 add get 11 mul
        add add 100 idiv
        put
      } for
      graystr 0 3 -1 roll getinterval
    } image
  } ifelse
  grestore
} bind def

/arrowhead {
  gsave
    [] 0 setdash
    strokeC strokeM strokeY strokeK setcmykcolor
    2 copy moveto
    4 2 roll exch 4 -1 roll exch
    sub 3 1 roll sub
    exch atan rotate dup scale
    arrowtype
    dup 0 eq {
      -1 2 rlineto 7 -2 rlineto -7 -2 rlineto
      closepath fill
    } if
    dup 1 eq {
      0 3 rlineto 9 -3 rlineto -9 -3 rlineto
      closepath fill
    } if
    dup 2 eq {
      currentpoint -6 -6 rmoveto lineto -6 6 rlineto
      2 setlinewidth stroke
    } if
    pop
  grestore
} bind def

/setcmykcolor where { %ifelse
  pop
}{ %else
  /setcmykcolor {
     /black exch def /yellow exch def
     /magenta exch def /cyan exch def
     cyan black add dup 1 gt { pop 1 } if 1 exch sub
     magenta black add dup 1 gt { pop 1 } if 1 exch sub
     yellow black add dup 1 gt { pop 1 } if 1 exch sub
     setrgbcolor
  } bind def
} ifelse

/RE { %def
  findfont begin
  currentdict dup length dict begin
    { %forall
      1 index /FID ne { def } { pop pop } ifelse
    } forall
    /FontName exch def dup length 0 ne { %if
      /Encoding Encoding 256 array copy def
      0 exch { %forall
        dup type /nametype eq { %ifelse
          Encoding 2 index 2 index put
          pop 1 add
        }{ %else
          exch pop
        } ifelse
      } forall
    } if pop
  currentdict dup end end
  /FontName get exch definefont pop
} bind def

/spacecount { %def
  0 exch
  ( ) { %loop
    search { %ifelse
      pop 3 -1 roll 1 add 3 1 roll
    }{ pop exit } ifelse
  } loop
} bind def

/WinAnsiEncoding [
  39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase
  /ellipsis/dagger/daggerdbl/circumflex/perthousand
  /Scaron/guilsinglleft/OE 145/quoteleft/quoteright
  /quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/dotlessi
  159/Ydieresis 164/currency 166/brokenbar 168/dieresis/copyright
  /ordfeminine 172/logicalnot 174/registered/macron/ring
  177/plusminus/twosuperior/threesuperior/acute/mu
  183/periodcentered/cedilla/onesuperior/ordmasculine
  188/onequarter/onehalf/threequarters 192/Agrave/Aacute
  /Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
  /Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute
  /Ocircumflex/Otilde/Odieresis/multiply/Oslash
  /Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
  /germandbls/agrave/aacute/acircumflex/atilde/adieresis
  /aring/ae/ccedilla/egrave/eacute/ecircumflex
  /edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde
  /odieresis/divide/oslash/ugrave/uacute/ucircumflex
  /udieresis/yacute/thorn/ydieresis
] def

/patarray [
/leftdiagonal /rightdiagonal /crossdiagonal /horizontal
/vertical /crosshatch /fishscale /wave /brick
] def
/arrowtype 0 def
/fillC 0 def /fillM 0 def /fillY 0 def /fillK 0 def
/strokeC 0 def /strokeM 0 def /strokeY 0 def /strokeK 1 def
/pattern -1 def
/mat matrix def
/c /curveto load def
/C /curveto load def
/e { gsave concat 0 0 moveto } bind def
/F {
  pattern -1 eq { %ifelse
    fillC fillM fillY fillK setcmykcolor fill
  }{ %else
    gsave fillC fillM fillY fillK setcmykcolor fill grestore
    0 0 0 1 setcmykcolor
    patarray pattern get findfont patternfill
  } ifelse
} bind def
/f { closepath F } bind def
/K { /strokeK exch def /strokeY exch def
     /strokeM exch def /strokeC exch def } bind def
/k { /fillK exch def /fillY exch def
     /fillM exch def /fillC exch def } bind def
/L /lineto load def
/m /moveto load def
/n /newpath load def
/N /newpath load def
/S { strokeC strokeM strokeY strokeK setcmykcolor stroke } bind def
/s { closepath S } bind def
/Tx { fillC fillM fillY fillK setcmykcolor show
      0 leading neg translate 0 0 moveto } bind def
/t { %def
  fillC fillM fillY fillK setcmykcolor
  align dup 0 eq { %ifelse
    pop show
  }{ %else
    dup 1 eq { %ifelse
      pop dup stringwidth pop 2 div neg 0 rmoveto show
    }{ %else
      dup 2 eq { %ifelse
        pop dup stringwidth pop neg 0 rmoveto show
      }{ %else
        pop
        dup stringwidth pop jwidth exch sub
        1 index spacecount
        dup 0 eq { %ifelse
          pop pop show
        }{ %else
          div 0 8#040 4 -1 roll widthshow
        } ifelse
      } ifelse
    } ifelse
  } ifelse
  0 leading neg translate 0 0 moveto
} bind def
/T { grestore } bind def
/TX { pop } bind def
/tbx { pop exch pop sub /jwidth exch def } def
/u {} def
/U {} def
/w /setlinewidth load def
/d /setdash load def
/B { gsave F grestore S } bind def
/b { closepath B } bind def
/z { /align exch def pop /leading exch def exch findfont
     exch scalefont setfont } bind def
/Pat { /pattern exch def } bind def
/At { /arrowtype exch def } bind def
/Ln {
  mat currentmatrix pop
    concat
    /y1 exch def /x1 exch def /y2 exch def /x2 exch def
    dup 2 mod 1 eq { currentlinewidth x2 y2 x1 y1 arrowhead } if
    2 idiv 1 eq { currentlinewidth x1 y1 x2 y2 arrowhead } if
    x1 y1 moveto x2 y2 lineto
  mat setmatrix
} bind def
/Ar {
  mat currentmatrix pop
    concat translate scale 0 0 1 5 -2 roll arc
  mat setmatrix
} bind def
/Pi {
  mat currentmatrix pop
    concat translate scale
    0 0 moveto 0 0 1 5 -2 roll arc closepath
  mat setmatrix
} bind def
/Bx {
  mat currentmatrix pop
    concat /y1 exch def /x1 exch def /y2 exch def /x2 exch def
    x1 y1 moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
  mat setmatrix
} bind def
/Ov {
  mat currentmatrix pop
    concat translate scale 0 0 1 0 360 arc
  mat setmatrix
} bind def
end
%%EndResource
%%EndProlog
%%BeginSetup
%PDX g 18 18 1 0
%%IncludeFont: NimbusRomNo9L-Medi
%%IncludeFont: TimesNewRomanPSMT
PDXDict begin
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
/_PDX_savepage save def

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 setlinecap
  7.5 0 moveto 15 7.5 lineto
  0 7.5 moveto 7.5 15 lineto
  2 setlinewidth stroke
} bind
/rightdiagonal true definepattern pop

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 setlinecap
  7.5 0 moveto 0 7.5 lineto
  15 7.5 moveto 7.5 15 lineto
  2 setlinewidth stroke
} bind
/leftdiagonal true definepattern pop

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 setlinecap
  0 7.5 moveto 15 7.5 lineto
  2 setlinewidth stroke
} bind
/horizontal true definepattern pop

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 setlinecap
  7.5 0 moveto 7.5 15 lineto
  2 setlinewidth stroke
} bind
/vertical true definepattern pop

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 setlinecap
  0 7.5 moveto 15 7.5 lineto
  7.5 0 moveto 7.5 15 lineto
  2 setlinewidth stroke
} bind
/crosshatch true definepattern pop

30 30 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 setlinecap
  0 7.5 moveto 30 7.5 lineto
  0 22.5 moveto 30 22.5 lineto
  7.5 0 moveto 7.5 7.5 lineto
  7.5 22.5 moveto 7.5 30 lineto
  22.5 7.5 moveto 22.5 22.5 lineto
  1 setlinewidth stroke
} bind
/brick true definepattern pop

30 30 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 2 scale
  2 setlinecap
  7.5 0 moveto 15 7.5 lineto
  0 7.5 moveto 7.5 15 lineto
  7.5 0 moveto 0 7.5 lineto
  15 7.5 moveto 7.5 15 lineto
  0.5 setlinewidth stroke
} bind
/crossdiagonal true definepattern pop

30 30 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 2 scale
  1 setlinecap
  0 7.5 moveto 0 15 7.5 270 360 arc
  7.5 15 moveto 15 15 7.5 180 270 arc
  0 7.5 moveto 7.5 7.5 7.5 180 360 arc
  0.5 setlinewidth stroke
} bind
/fishscale true definepattern pop

30 30 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  1 setlinecap 0.5 setlinewidth
  7.5 0 10.6 135 45 arcn
  22.5 15 10.6 225 315 arc
  stroke
  7.5 15 10.6 135 45 arcn
  22.5 30 10.6 225 315 arc
  stroke
} bind
/wave true definepattern pop

WinAnsiEncoding /_NimbusRomNo9L-Medi /NimbusRomNo9L-Medi RE
WinAnsiEncoding /_TimesNewRomanPSMT /TimesNewRomanPSMT RE

newpath 0 setlinecap 0 setlinejoin 10 setmiterlimit
1 setlinewidth [] 0 setdash
%%EndPageSetup
6.80074 6.80074 14.5 770.75 [1 0 0 1 39.4 -50.85] Ov
s
0 61.4763 770.892 21.5 770.75 [1 0 0 1 39.4 -51.24] Ln
S
6.80074 6.80074 14.5 770.75 [1 0 0 1 93.6 -51.48] Ov
s
0 61.4763 770.892 21.5 770.75 [1 0 0 1 93.6 -51.13] Ln
S
6.80074 6.80074 14.5 770.75 [1 0 0 1 147.8 -51.37] Ov
s
0 61.4763 770.892 21.5 770.75 [1 0 0 1 147.4 -51.24] Ln
S
6.80074 6.80074 14.5 770.75 [1 0 0 1 201.6 -51.48] Ov
s
0 61.4763 770.892 21.5 770.75 [1 0 0 1 201.6 -51.13] Ln
S
6.80074 6.80074 14.5 770.75 [1 0 0 1 255.8 -51.37] Ov
s
0 61.4763 770.892 21.5 770.75 [1 0 0 1 255.6 -51.44] Ln
S
6.80074 6.80074 14.5 770.75 [1 0 0 1 309.8 -51.68] Ov
s
0 18.3511 988.648 18.1697 1017.11 [1 0 0 1 89.75 -304.8] Ln
S
0 17.7528 720.738 17.9301 749.604 [1 0 0 1 306.5 -37.85] Ln
S
1 1 1 0 k
/_NimbusRomNo9L-Medi 28 30 0 0 z
[1 0 0 1 47.21 733.3] e
19.877 -9.072 0 18.928 tbx
(2) t
T
[1 0 0 1 101 733.4] e
19.6681 -9.072 0 18.928 tbx
(2) t
T
[1 0 0 1 264 733.8] e
19.6681 -9.072 0 18.928 tbx
(2) t
T
0 61.4763 770.892 21.5 770.75 [1 0 0 1 310.1 -50.73] Ln
S
0 0 0 0 k
6.80074 6.80074 14.5 770.75 [1 0 0 1 364.3 -50.97] Ov
s
0 34.9045 880.388 52.9393 910.324 [1 0 0 1 163.5 -197.5] Ln
S
0 123.729 631.268 107.14 659.314 [1 0 0 1 110.2 52.58] Ln
S
1 1 1 0 k
[1 0 0 1 154.2 733.4] e
15.3708 -9.072 0 18.928 tbx
(4) t
T
[1 0 0 1 208.7 733.9] e
15.3708 -9.072 0 18.928 tbx
(4) t
T
[1 0 0 1 317.1 734.2] e
24.0168 -9.072 0 18.928 tbx
(1) t
T
[1 0 0 1 370.7 733.8] e
30.7416 -9.072 0 18.928 tbx
(5) t
T
/_TimesNewRomanPSMT 18 19 0 0 z
[1 0 0 1 99.46 661.1] e
25.9382 -3.88803 0 16.038 tbx
(b1) t
T
[1 0 0 1 186.9 661.1] e
21.1348 -3.88803 0 16.038 tbx
(b2) t
T
[1 0 0 1 229.1 661.1] e
26.8989 -3.88803 0 16.038 tbx
(b3) t
T
[1 0 0 1 315.6 663] e
22.0955 -3.88803 0 16.038 tbx
(b4) t
T
%%PageTrailer
_PDX_savepage restore
%%Trailer
end
showpage
%%EOF

%%EndDocument
@endspecial 330 650 a
 /End PSfrag
 330 650 a 330 54 a
 /Hide PSfrag
 330 54 a Fd
-104 89 a(PSfrag) 17 b(replacemen) o(ts) p -104 106 435
2 v 330 108 a
 /Unhide PSfrag
 330 108 a 267 164 a
  {
 267 164 a Fb(\000) p
Fd(1) 267 164 y
  } 0/Place PSfrag
 267 164 a 267 225 a
  {
 267 225 a Fb(\000) p
Fd(2) 267 225 y
  } 1/Place PSfrag
 267 225 a 267 285 a
  {
 267 285 a Fb(\000) p
Fd(3) 267 285 y
  } 2/Place PSfrag
 267 285 a 267 345 a
  {
 267 345 a Fb(\000) p
Fd(5) 267 345 y
  } 3/Place PSfrag
 267 345 a 305 409 a
  {
 305 409 a Fb(\003) 305
409 y
  } 4/Place PSfrag
 305 409 a 279 469 a
  {
 279 469 a Fd(b1) 279 469 y
  } 5/Place PSfrag

279 469 a 279 530 a
  {
 279 530 a Fd(b2) 279 530 y
  } 6/Place PSfrag
 279 530
a 279 590 a
  {
 279 590 a Fd(b3) 279 590 y
  } 7/Place PSfrag
 279 590 a 279
650 a
  {
 279 650 a Fd(b4) 279 650 y
  } 8/Place PSfrag
 279 650 a Fd 202 795
a(The) f(list) g("b1:...") f(means) h(the) g(dual) g(graph) h(of) g
(the) f(branc) o(h) g("b1".) p Fe 745 890 a(b1:[2,3,[1,b5],2]) p
Fa 919 943 a(~) 919 972 y(\177) 631 1499 y
 /PSfrag where{pop(-1)[[0(Bl)1 0]](-2)[[1(Bl)1 0]](-3)[[2(Bl)1 0]](-5)[[3(Bl)1
0]](*)[[4(Bl)1 0]](b1)[[9(Bl)1 0]](b2)[[6(Bl)1 0]](b3)[[7(Bl)1 0]](b4)[[8(Bl)1
0]](b5)[[10(Bl)1 0]]10 0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 631 1499 a
@beginspecial 9 @llx 627 @lly 230 @urx 797 @ury 1133
@rhi @clip @setspecial
%%BeginDocument: ex2dual2.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Mayura Draw, Version 3.0
%%Title: ex2dual2.eps
%%CreationDate: Sun Aug 09 18:34:44 1998
%%BoundingBox: 9 627 230 797
%%DocumentFonts: NimbusRomNo9L-Medi
%%+ TimesNewRomanPSMT
%%Orientation: Portrait
%%EndComments
%%BeginProlog
%%BeginResource: procset MayuraDraw_ops
%%Version: 2.1
%%Copyright: (c) 1993-98 Mayura Software
/PDXDict 100 dict def
PDXDict begin
% width height matrix proc key cache
% definepattern -\> font
/definepattern { %def
  7 dict begin
    /FontDict 9 dict def
    FontDict begin
      /cache exch def
      /key exch def
      /proc exch cvx def
      /mtx exch matrix invertmatrix def
      /height exch def
      /width exch def
      /ctm matrix currentmatrix def
      /ptm matrix identmatrix def
      /str
      (12345678901234567890123456789012)
      def
    end
    /FontBBox [ %def
      0 0 FontDict /width get
      FontDict /height get
    ] def
    /FontMatrix FontDict /mtx get def
    /Encoding StandardEncoding def
    /FontType 3 def
    /BuildChar { %def
      pop begin
      FontDict begin
        width 0 cache { %ifelse
          0 0 width height setcachedevice
        }{ %else
          setcharwidth
        } ifelse
        0 0 moveto width 0 lineto
        width height lineto 0 height lineto
        closepath clip newpath
        gsave proc grestore
      end end
    } def
    FontDict /key get currentdict definefont
  end
} bind def

% dict patternpath -
% dict matrix patternpath -
/patternpath { %def
  dup type /dicttype eq { %ifelse
    begin FontDict /ctm get setmatrix
  }{ %else
    exch begin FontDict /ctm get setmatrix
    concat
  } ifelse
  currentdict setfont
  FontDict begin
    FontMatrix concat
    width 0 dtransform
    round width div exch round width div exch
    0 height dtransform
    round height div exch
    round height div exch
    0 0 transform round exch round exch
    ptm astore setmatrix

    pathbbox
    height div ceiling height mul 4 1 roll
    width div ceiling width mul 4 1 roll
    height div floor height mul 4 1 roll
    width div floor width mul 4 1 roll

    2 index sub height div ceiling cvi exch
    3 index sub width div ceiling cvi exch
    4 2 roll moveto

    FontMatrix ptm invertmatrix pop
    { %repeat
      gsave
        ptm concat
        dup str length idiv { %repeat
          str show
        } repeat
        dup str length mod str exch
        0 exch getinterval show
      grestore
      0 height rmoveto
    } repeat
    pop
  end end
} bind def

% dict patternfill -
% dict matrix patternfill -
/patternfill { %def
  gsave
    clip patternpath
  grestore
  newpath
} bind def

/img { %def
  gsave
  /imgh exch def
  /imgw exch def
  concat
  imgw imgh 8
  [imgw 0 0 imgh neg 0 imgh]
  /colorstr 768 string def
  /colorimage where {
    pop
    { currentfile colorstr readhexstring pop }
    false 3 colorimage
  }{
    /graystr 256 string def
    {
      currentfile colorstr readhexstring pop
      length 3 idiv
      dup 1 sub 0 1 3 -1 roll
      {
        graystr exch
        colorstr 1 index 3 mul get 30 mul
        colorstr 2 index 3 mul 1 add get 59 mul
        colorstr 3 index 3 mul 2 add get 11 mul
        add add 100 idiv
        put
      } for
      graystr 0 3 -1 roll getinterval
    } image
  } ifelse
  grestore
} bind def

/arrowhead {
  gsave
    [] 0 setdash
    strokeC strokeM strokeY strokeK setcmykcolor
    2 copy moveto
    4 2 roll exch 4 -1 roll exch
    sub 3 1 roll sub
    exch atan rotate dup scale
    arrowtype
    dup 0 eq {
      -1 2 rlineto 7 -2 rlineto -7 -2 rlineto
      closepath fill
    } if
    dup 1 eq {
      0 3 rlineto 9 -3 rlineto -9 -3 rlineto
      closepath fill
    } if
    dup 2 eq {
      currentpoint -6 -6 rmoveto lineto -6 6 rlineto
      2 setlinewidth stroke
    } if
    pop
  grestore
} bind def

/setcmykcolor where { %ifelse
  pop
}{ %else
  /setcmykcolor {
     /black exch def /yellow exch def
     /magenta exch def /cyan exch def
     cyan black add dup 1 gt { pop 1 } if 1 exch sub
     magenta black add dup 1 gt { pop 1 } if 1 exch sub
     yellow black add dup 1 gt { pop 1 } if 1 exch sub
     setrgbcolor
  } bind def
} ifelse

/RE { %def
  findfont begin
  currentdict dup length dict begin
    { %forall
      1 index /FID ne { def } { pop pop } ifelse
    } forall
    /FontName exch def dup length 0 ne { %if
      /Encoding Encoding 256 array copy def
      0 exch { %forall
        dup type /nametype eq { %ifelse
          Encoding 2 index 2 index put
          pop 1 add
        }{ %else
          exch pop
        } ifelse
      } forall
    } if pop
  currentdict dup end end
  /FontName get exch definefont pop
} bind def

/spacecount { %def
  0 exch
  ( ) { %loop
    search { %ifelse
      pop 3 -1 roll 1 add 3 1 roll
    }{ pop exit } ifelse
  } loop
} bind def

/WinAnsiEncoding [
  39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase
  /ellipsis/dagger/daggerdbl/circumflex/perthousand
  /Scaron/guilsinglleft/OE 145/quoteleft/quoteright
  /quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/dotlessi
  159/Ydieresis 164/currency 166/brokenbar 168/dieresis/copyright
  /ordfeminine 172/logicalnot 174/registered/macron/ring
  177/plusminus/twosuperior/threesuperior/acute/mu
  183/periodcentered/cedilla/onesuperior/ordmasculine
  188/onequarter/onehalf/threequarters 192/Agrave/Aacute
  /Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
  /Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute
  /Ocircumflex/Otilde/Odieresis/multiply/Oslash
  /Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
  /germandbls/agrave/aacute/acircumflex/atilde/adieresis
  /aring/ae/ccedilla/egrave/eacute/ecircumflex
  /edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde
  /odieresis/divide/oslash/ugrave/uacute/ucircumflex
  /udieresis/yacute/thorn/ydieresis
] def

/patarray [
/leftdiagonal /rightdiagonal /crossdiagonal /horizontal
/vertical /crosshatch /fishscale /wave /brick
] def
/arrowtype 0 def
/fillC 0 def /fillM 0 def /fillY 0 def /fillK 0 def
/strokeC 0 def /strokeM 0 def /strokeY 0 def /strokeK 1 def
/pattern -1 def
/mat matrix def
/c /curveto load def
/C /curveto load def
/e { gsave concat 0 0 moveto } bind def
/F {
  pattern -1 eq { %ifelse
    fillC fillM fillY fillK setcmykcolor fill
  }{ %else
    gsave fillC fillM fillY fillK setcmykcolor fill grestore
    0 0 0 1 setcmykcolor
    patarray pattern get findfont patternfill
  } ifelse
} bind def
/f { closepath F } bind def
/K { /strokeK exch def /strokeY exch def
     /strokeM exch def /strokeC exch def } bind def
/k { /fillK exch def /fillY exch def
     /fillM exch def /fillC exch def } bind def
/L /lineto load def
/m /moveto load def
/n /newpath load def
/N /newpath load def
/S { strokeC strokeM strokeY strokeK setcmykcolor stroke } bind def
/s { closepath S } bind def
/Tx { fillC fillM fillY fillK setcmykcolor show
      0 leading neg translate 0 0 moveto } bind def
/t { %def
  fillC fillM fillY fillK setcmykcolor
  align dup 0 eq { %ifelse
    pop show
  }{ %else
    dup 1 eq { %ifelse
      pop dup stringwidth pop 2 div neg 0 rmoveto show
    }{ %else
      dup 2 eq { %ifelse
        pop dup stringwidth pop neg 0 rmoveto show
      }{ %else
        pop
        dup stringwidth pop jwidth exch sub
        1 index spacecount
        dup 0 eq { %ifelse
          pop pop show
        }{ %else
          div 0 8#040 4 -1 roll widthshow
        } ifelse
      } ifelse
    } ifelse
  } ifelse
  0 leading neg translate 0 0 moveto
} bind def
/T { grestore } bind def
/TX { pop } bind def
/tbx { pop exch pop sub /jwidth exch def } def
/u {} def
/U {} def
/w /setlinewidth load def
/d /setdash load def
/B { gsave F grestore S } bind def
/b { closepath B } bind def
/z { /align exch def pop /leading exch def exch findfont
     exch scalefont setfont } bind def
/Pat { /pattern exch def } bind def
/At { /arrowtype exch def } bind def
/Ln {
  mat currentmatrix pop
    concat
    /y1 exch def /x1 exch def /y2 exch def /x2 exch def
    dup 2 mod 1 eq { currentlinewidth x2 y2 x1 y1 arrowhead } if
    2 idiv 1 eq { currentlinewidth x1 y1 x2 y2 arrowhead } if
    x1 y1 moveto x2 y2 lineto
  mat setmatrix
} bind def
/Ar {
  mat currentmatrix pop
    concat translate scale 0 0 1 5 -2 roll arc
  mat setmatrix
} bind def
/Pi {
  mat currentmatrix pop
    concat translate scale
    0 0 moveto 0 0 1 5 -2 roll arc closepath
  mat setmatrix
} bind def
/Bx {
  mat currentmatrix pop
    concat /y1 exch def /x1 exch def /y2 exch def /x2 exch def
    x1 y1 moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
  mat setmatrix
} bind def
/Ov {
  mat currentmatrix pop
    concat translate scale 0 0 1 0 360 arc
  mat setmatrix
} bind def
end
%%EndResource
%%EndProlog
%%BeginSetup
%PDX g 18 18 1 0
%%IncludeFont: NimbusRomNo9L-Medi
%%IncludeFont: TimesNewRomanPSMT
PDXDict begin
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
/_PDX_savepage save def

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 setlinecap
  7.5 0 moveto 15 7.5 lineto
  0 7.5 moveto 7.5 15 lineto
  2 setlinewidth stroke
} bind
/rightdiagonal true definepattern pop

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 setlinecap
  7.5 0 moveto 0 7.5 lineto
  15 7.5 moveto 7.5 15 lineto
  2 setlinewidth stroke
} bind
/leftdiagonal true definepattern pop

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 setlinecap
  0 7.5 moveto 15 7.5 lineto
  2 setlinewidth stroke
} bind
/horizontal true definepattern pop

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 setlinecap
  7.5 0 moveto 7.5 15 lineto
  2 setlinewidth stroke
} bind
/vertical true definepattern pop

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 setlinecap
  0 7.5 moveto 15 7.5 lineto
  7.5 0 moveto 7.5 15 lineto
  2 setlinewidth stroke
} bind
/crosshatch true definepattern pop

30 30 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 setlinecap
  0 7.5 moveto 30 7.5 lineto
  0 22.5 moveto 30 22.5 lineto
  7.5 0 moveto 7.5 7.5 lineto
  7.5 22.5 moveto 7.5 30 lineto
  22.5 7.5 moveto 22.5 22.5 lineto
  1 setlinewidth stroke
} bind
/brick true definepattern pop

30 30 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 2 scale
  2 setlinecap
  7.5 0 moveto 15 7.5 lineto
  0 7.5 moveto 7.5 15 lineto
  7.5 0 moveto 0 7.5 lineto
  15 7.5 moveto 7.5 15 lineto
  0.5 setlinewidth stroke
} bind
/crossdiagonal true definepattern pop

30 30 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 2 scale
  1 setlinecap
  0 7.5 moveto 0 15 7.5 270 360 arc
  7.5 15 moveto 15 15 7.5 180 270 arc
  0 7.5 moveto 7.5 7.5 7.5 180 360 arc
  0.5 setlinewidth stroke
} bind
/fishscale true definepattern pop

30 30 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  1 setlinecap 0.5 setlinewidth
  7.5 0 10.6 135 45 arcn
  22.5 15 10.6 225 315 arc
  stroke
  7.5 15 10.6 135 45 arcn
  22.5 30 10.6 225 315 arc
  stroke
} bind
/wave true definepattern pop

WinAnsiEncoding /_NimbusRomNo9L-Medi /NimbusRomNo9L-Medi RE
WinAnsiEncoding /_TimesNewRomanPSMT /TimesNewRomanPSMT RE

newpath 0 setlinecap 0 setlinejoin 10 setmiterlimit
1 setlinewidth [] 0 setdash
%%EndPageSetup
6.80074 6.80074 14.5 770.75 [1 0 0 1 21 -68.61] Ov
s
0 61.4763 770.892 21.5 770.75 [1 0 0 1 21 -69.01] Ln
S
6.80074 6.80074 14.5 770.75 [1 0 0 1 75.15 -69.21] Ov
s
0 61.4763 770.892 21.5 770.75 [1 0 0 1 75.15 -68.91] Ln
S
6.80074 6.80074 14.5 770.75 [1 0 0 1 129.3 -69.11] Ov
s
0 61.4763 770.892 21.5 770.75 [1 0 0 1 128.9 -69.01] Ln
S
6.80074 6.80074 14.5 770.75 [1 0 0 1 183.1 -69.21] Ov
s
0 17.9897 708.867 18.3511 754.497 [1 0 0 1 17.7 0.6944] Ln
S
1 1 1 0 k
/_NimbusRomNo9L-Medi 28 30 0 0 z
[1 0 0 1 38.69 713.7] e
19.6681 -9.072 0 18.928 tbx
(2) t
T
[1 0 0 1 192.2 714] e
19.6681 -9.072 0 18.928 tbx
(2) t
T
[1 0 0 1 85.25 713.7] e
27.8595 -9.072 0 18.928 tbx
(3) t
T
[1 0 0 1 137.2 713.8] e
24.0168 -9.072 0 18.928 tbx
(1) t
T
0 17.9301 726.759 17.9301 749.604 [1 0 0 1 126.3 -54.71] Ln
S
/_TimesNewRomanPSMT 18 19 0 0 z
[1 0 0 1 28.37 762.8] e
18.001 -3.88803 0 16.038 tbx
(b1) t
T
[1 0 0 1 137.9 649.5] e
18.001 -3.88803 0 16.038 tbx
(b5) t
T
%%PageTrailer
_PDX_savepage restore
%%Trailer
end
showpage
%%EOF

%%EndDocument
@endspecial 631 1499 a
 /End PSfrag
 631 1499 a 631 782 a
 /Hide PSfrag
 631 782 a
Fd 197 817 a(PSfrag) h(replacemen) o(ts) p 197 835 435
2 v 631 837 a
 /Unhide PSfrag
 631 837 a 568 893 a
  {
 568 893 a Fb(\000) p
Fd(1) 568 893 y
  } 0/Place PSfrag
 568 893 a 568 953 a
  {
 568 953 a Fb(\000) p
Fd(2) 568 953 y
  } 1/Place PSfrag
 568 953 a 568 1013 a
  {
 568 1013 a Fb(\000) p
Fd(3) 568 1013 y
  } 2/Place PSfrag
 568 1013 a 568 1073 a
  {
 568 1073 a Fb(\000) p
Fd(5) 568 1073 y
  } 3/Place PSfrag
 568 1073 a 606 1138 a
  {
 606 1138 a Fb(\003) 606
1138 y
  } 4/Place PSfrag
 606 1138 a 580 1198 a
  {
 580 1198 a Fd(b1) 580 1198
y
  } 5/Place PSfrag
 580 1198 a 580 1258 a
  {
 580 1258 a Fd(b2) 580 1258 y
  } 6/Place PSfrag

580 1258 a 580 1318 a
  {
 580 1318 a Fd(b3) 580 1318 y
  } 7/Place PSfrag
 580
1318 a 580 1378 a
  {
 580 1378 a Fd(b4) 580 1378 y
  } 8/Place PSfrag
 580 1378
a 580 1438 a
  {
 580 1438 a Fd(b1) 580 1438 y
  } 9/Place PSfrag
 580 1438 a
580 1499 a
  {
 580 1499 a Fd(b5) 580 1499 y
  } 10/Place PSfrag
 580 1499 a Fd
202 1559 a(Therefor) f(w) o(e) g(get) g(follo) o(wing) g(dual) g
(graph.) 289 2694 y
 /PSfrag where{pop(-1)[[0(Bl)1 0]](-2)[[1(Bl)1 0]](-3)[[2(Bl)1 0]](-5)[[3(Bl)1
0]](*)[[4(Bl)1 0]](b1)[[9(Bl)1 0]](b2)[[6(Bl)1 0]](b3)[[7(Bl)1 0]](b4)[[8(Bl)1
0]](b5)[[10(Bl)1 0]](1)[[11(Bl)1 0]](2)[[12(Bl)1 0]](3)[[13(Bl)1 0]](4)[[14(Bl)1
0]](5)[[15(Bl)1 0]]15 0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 289 2694 a @beginspecial 10 @llx
299 @lly 536 @urx 753 @ury 3118 @rwi @clip @setspecial
%%BeginDocument: dualex2.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Mayura Draw, Version 3.0
%%Title: dualex2.eps
%%CreationDate: Tue Aug 04 23:24:01 1998
%%BoundingBox: 10 299 536 753
%%DocumentFonts: NimbusRomNo9L-Medi
%%Orientation: Portrait
%%EndComments
%%BeginProlog
%%BeginResource: procset MayuraDraw_ops
%%Version: 2.1
%%Copyright: (c) 1993-98 Mayura Software
/PDXDict 100 dict def
PDXDict begin
% width height matrix proc key cache
% definepattern -\> font
/definepattern { %def
  7 dict begin
    /FontDict 9 dict def
    FontDict begin
      /cache exch def
      /key exch def
      /proc exch cvx def
      /mtx exch matrix invertmatrix def
      /height exch def
      /width exch def
      /ctm matrix currentmatrix def
      /ptm matrix identmatrix def
      /str
      (12345678901234567890123456789012)
      def
    end
    /FontBBox [ %def
      0 0 FontDict /width get
      FontDict /height get
    ] def
    /FontMatrix FontDict /mtx get def
    /Encoding StandardEncoding def
    /FontType 3 def
    /BuildChar { %def
      pop begin
      FontDict begin
        width 0 cache { %ifelse
          0 0 width height setcachedevice
        }{ %else
          setcharwidth
        } ifelse
        0 0 moveto width 0 lineto
        width height lineto 0 height lineto
        closepath clip newpath
        gsave proc grestore
      end end
    } def
    FontDict /key get currentdict definefont
  end
} bind def

% dict patternpath -
% dict matrix patternpath -
/patternpath { %def
  dup type /dicttype eq { %ifelse
    begin FontDict /ctm get setmatrix
  }{ %else
    exch begin FontDict /ctm get setmatrix
    concat
  } ifelse
  currentdict setfont
  FontDict begin
    FontMatrix concat
    width 0 dtransform
    round width div exch round width div exch
    0 height dtransform
    round height div exch
    round height div exch
    0 0 transform round exch round exch
    ptm astore setmatrix

    pathbbox
    height div ceiling height mul 4 1 roll
    width div ceiling width mul 4 1 roll
    height div floor height mul 4 1 roll
    width div floor width mul 4 1 roll

    2 index sub height div ceiling cvi exch
    3 index sub width div ceiling cvi exch
    4 2 roll moveto

    FontMatrix ptm invertmatrix pop
    { %repeat
      gsave
        ptm concat
        dup str length idiv { %repeat
          str show
        } repeat
        dup str length mod str exch
        0 exch getinterval show
      grestore
      0 height rmoveto
    } repeat
    pop
  end end
} bind def

% dict patternfill -
% dict matrix patternfill -
/patternfill { %def
  gsave
    clip patternpath
  grestore
  newpath
} bind def

/img { %def
  gsave
  /imgh exch def
  /imgw exch def
  concat
  imgw imgh 8
  [imgw 0 0 imgh neg 0 imgh]
  /colorstr 768 string def
  /colorimage where {
    pop
    { currentfile colorstr readhexstring pop }
    false 3 colorimage
  }{
    /graystr 256 string def
    {
      currentfile colorstr readhexstring pop
      length 3 idiv
      dup 1 sub 0 1 3 -1 roll
      {
        graystr exch
        colorstr 1 index 3 mul get 30 mul
        colorstr 2 index 3 mul 1 add get 59 mul
        colorstr 3 index 3 mul 2 add get 11 mul
        add add 100 idiv
        put
      } for
      graystr 0 3 -1 roll getinterval
    } image
  } ifelse
  grestore
} bind def

/arrowhead {
  gsave
    [] 0 setdash
    strokeC strokeM strokeY strokeK setcmykcolor
    2 copy moveto
    4 2 roll exch 4 -1 roll exch
    sub 3 1 roll sub
    exch atan rotate dup scale
    arrowtype
    dup 0 eq {
      -1 2 rlineto 7 -2 rlineto -7 -2 rlineto
      closepath fill
    } if
    dup 1 eq {
      0 3 rlineto 9 -3 rlineto -9 -3 rlineto
      closepath fill
    } if
    dup 2 eq {
      currentpoint -6 -6 rmoveto lineto -6 6 rlineto
      2 setlinewidth stroke
    } if
    pop
  grestore
} bind def

/setcmykcolor where { %ifelse
  pop
}{ %else
  /setcmykcolor {
     /black exch def /yellow exch def
     /magenta exch def /cyan exch def
     cyan black add dup 1 gt { pop 1 } if 1 exch sub
     magenta black add dup 1 gt { pop 1 } if 1 exch sub
     yellow black add dup 1 gt { pop 1 } if 1 exch sub
     setrgbcolor
  } bind def
} ifelse

/RE { %def
  findfont begin
  currentdict dup length dict begin
    { %forall
      1 index /FID ne { def } { pop pop } ifelse
    } forall
    /FontName exch def dup length 0 ne { %if
      /Encoding Encoding 256 array copy def
      0 exch { %forall
        dup type /nametype eq { %ifelse
          Encoding 2 index 2 index put
          pop 1 add
        }{ %else
          exch pop
        } ifelse
      } forall
    } if pop
  currentdict dup end end
  /FontName get exch definefont pop
} bind def

/spacecount { %def
  0 exch
  ( ) { %loop
    search { %ifelse
      pop 3 -1 roll 1 add 3 1 roll
    }{ pop exit } ifelse
  } loop
} bind def

/WinAnsiEncoding [
  39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase
  /ellipsis/dagger/daggerdbl/circumflex/perthousand
  /Scaron/guilsinglleft/OE 145/quoteleft/quoteright
  /quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/dotlessi
  159/Ydieresis 164/currency 166/brokenbar 168/dieresis/copyright
  /ordfeminine 172/logicalnot 174/registered/macron/ring
  177/plusminus/twosuperior/threesuperior/acute/mu
  183/periodcentered/cedilla/onesuperior/ordmasculine
  188/onequarter/onehalf/threequarters 192/Agrave/Aacute
  /Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
  /Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute
  /Ocircumflex/Otilde/Odieresis/multiply/Oslash
  /Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
  /germandbls/agrave/aacute/acircumflex/atilde/adieresis
  /aring/ae/ccedilla/egrave/eacute/ecircumflex
  /edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde
  /odieresis/divide/oslash/ugrave/uacute/ucircumflex
  /udieresis/yacute/thorn/ydieresis
] def

/patarray [
/leftdiagonal /rightdiagonal /crossdiagonal /horizontal
/vertical /crosshatch /fishscale /wave /brick
] def
/arrowtype 0 def
/fillC 0 def /fillM 0 def /fillY 0 def /fillK 0 def
/strokeC 0 def /strokeM 0 def /strokeY 0 def /strokeK 1 def
/pattern -1 def
/mat matrix def
/c /curveto load def
/C /curveto load def
/e { gsave concat 0 0 moveto } bind def
/F {
  pattern -1 eq { %ifelse
    fillC fillM fillY fillK setcmykcolor fill
  }{ %else
    gsave fillC fillM fillY fillK setcmykcolor fill grestore
    0 0 0 1 setcmykcolor
    patarray pattern get findfont patternfill
  } ifelse
} bind def
/f { closepath F } bind def
/K { /strokeK exch def /strokeY exch def
     /strokeM exch def /strokeC exch def } bind def
/k { /fillK exch def /fillY exch def
     /fillM exch def /fillC exch def } bind def
/L /lineto load def
/m /moveto load def
/n /newpath load def
/N /newpath load def
/S { strokeC strokeM strokeY strokeK setcmykcolor stroke } bind def
/s { closepath S } bind def
/Tx { fillC fillM fillY fillK setcmykcolor show
      0 leading neg translate 0 0 moveto } bind def
/t { %def
  fillC fillM fillY fillK setcmykcolor
  align dup 0 eq { %ifelse
    pop show
  }{ %else
    dup 1 eq { %ifelse
      pop dup stringwidth pop 2 div neg 0 rmoveto show
    }{ %else
      dup 2 eq { %ifelse
        pop dup stringwidth pop neg 0 rmoveto show
      }{ %else
        pop
        dup stringwidth pop jwidth exch sub
        1 index spacecount
        dup 0 eq { %ifelse
          pop pop show
        }{ %else
          div 0 8#040 4 -1 roll widthshow
        } ifelse
      } ifelse
    } ifelse
  } ifelse
  0 leading neg translate 0 0 moveto
} bind def
/T { grestore } bind def
/TX { pop } bind def
/tbx { pop exch pop sub /jwidth exch def } def
/u {} def
/U {} def
/w /setlinewidth load def
/d /setdash load def
/B { gsave F grestore S } bind def
/b { closepath B } bind def
/z { /align exch def pop /leading exch def exch findfont
     exch scalefont setfont } bind def
/Pat { /pattern exch def } bind def
/At { /arrowtype exch def } bind def
/Ln {
  mat currentmatrix pop
    concat
    /y1 exch def /x1 exch def /y2 exch def /x2 exch def
    dup 2 mod 1 eq { currentlinewidth x2 y2 x1 y1 arrowhead } if
    2 idiv 1 eq { currentlinewidth x1 y1 x2 y2 arrowhead } if
    x1 y1 moveto x2 y2 lineto
  mat setmatrix
} bind def
/Ar {
  mat currentmatrix pop
    concat translate scale 0 0 1 5 -2 roll arc
  mat setmatrix
} bind def
/Pi {
  mat currentmatrix pop
    concat translate scale
    0 0 moveto 0 0 1 5 -2 roll arc closepath
  mat setmatrix
} bind def
/Bx {
  mat currentmatrix pop
    concat /y1 exch def /x1 exch def /y2 exch def /x2 exch def
    x1 y1 moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
  mat setmatrix
} bind def
/Ov {
  mat currentmatrix pop
    concat translate scale 0 0 1 0 360 arc
  mat setmatrix
} bind def
end
%%EndResource
%%EndProlog
%%BeginSetup
%PDX g 18 18 1 0
%%IncludeFont: NimbusRomNo9L-Medi
PDXDict begin
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
/_PDX_savepage save def

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 setlinecap
  7.5 0 moveto 15 7.5 lineto
  0 7.5 moveto 7.5 15 lineto
  2 setlinewidth stroke
} bind
/rightdiagonal true definepattern pop

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 setlinecap
  7.5 0 moveto 0 7.5 lineto
  15 7.5 moveto 7.5 15 lineto
  2 setlinewidth stroke
} bind
/leftdiagonal true definepattern pop

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 setlinecap
  0 7.5 moveto 15 7.5 lineto
  2 setlinewidth stroke
} bind
/horizontal true definepattern pop

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 setlinecap
  7.5 0 moveto 7.5 15 lineto
  2 setlinewidth stroke
} bind
/vertical true definepattern pop

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 setlinecap
  0 7.5 moveto 15 7.5 lineto
  7.5 0 moveto 7.5 15 lineto
  2 setlinewidth stroke
} bind
/crosshatch true definepattern pop

30 30 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 setlinecap
  0 7.5 moveto 30 7.5 lineto
  0 22.5 moveto 30 22.5 lineto
  7.5 0 moveto 7.5 7.5 lineto
  7.5 22.5 moveto 7.5 30 lineto
  22.5 7.5 moveto 22.5 22.5 lineto
  1 setlinewidth stroke
} bind
/brick true definepattern pop

30 30 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 2 scale
  2 setlinecap
  7.5 0 moveto 15 7.5 lineto
  0 7.5 moveto 7.5 15 lineto
  7.5 0 moveto 0 7.5 lineto
  15 7.5 moveto 7.5 15 lineto
  0.5 setlinewidth stroke
} bind
/crossdiagonal true definepattern pop

30 30 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 2 scale
  1 setlinecap
  0 7.5 moveto 0 15 7.5 270 360 arc
  7.5 15 moveto 15 15 7.5 180 270 arc
  0 7.5 moveto 7.5 7.5 7.5 180 360 arc
  0.5 setlinewidth stroke
} bind
/fishscale true definepattern pop

30 30 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  1 setlinecap 0.5 setlinewidth
  7.5 0 10.6 135 45 arcn
  22.5 15 10.6 225 315 arc
  stroke
  7.5 15 10.6 135 45 arcn
  22.5 30 10.6 225 315 arc
  stroke
} bind
/wave true definepattern pop

WinAnsiEncoding /_NimbusRomNo9L-Medi /NimbusRomNo9L-Medi RE

newpath 0 setlinecap 0 setlinejoin 10 setmiterlimit
1 setlinewidth [] 0 setdash
%%EndPageSetup
6.80074 6.80074 14.5 770.75 [1 0 0 1 21.4 -68.85] Ov
s
0 61.4763 770.892 21.5 770.75 [1 0 0 1 21.4 -69.24] Ln
S
6.80074 6.80074 14.5 770.75 [1 0 0 1 75.6 -69.48] Ov
s
0 61.4763 770.892 21.5 770.75 [1 0 0 1 75.6 -69.13] Ln
S
6.80074 6.80074 14.5 770.75 [1 0 0 1 129.8 -69.37] Ov
s
0 61.4763 770.892 21.5 770.75 [1 0 0 1 129.4 -69.24] Ln
S
6.80074 6.80074 14.5 770.75 [1 0 0 1 183.6 -69.48] Ov
s
0 61.4763 770.892 21.5 770.75 [1 0 0 1 183.6 -69.13] Ln
S
6.80074 6.80074 14.5 770.75 [1 0 0 1 237.8 -69.37] Ov
s
0 61.4763 770.892 21.5 770.75 [1 0 0 1 237.6 -69.44] Ln
S
6.80074 6.80074 14.5 770.75 [1 0 0 1 291.8 -69.68] Ov
s
6.80074 6.80074 14.5 770.75 [1 0 0 1 75.05 -392.1] Ov
s
0 61.4763 770.892 21.5 770.75 [1 0 0 1 75.05 -392.5] Ln
S
6.80074 6.80074 14.5 770.75 [1 0 0 1 129.2 -392.7] Ov
s
0 61.4763 770.892 21.5 770.75 [1 0 0 1 129.2 -392.4] Ln
S
6.80074 6.80074 14.5 770.75 [1 0 0 1 183.4 -392.6] Ov
s
0 61.4763 770.892 21.5 770.75 [1 0 0 1 183 -392.5] Ln
S
6.80074 6.80074 14.5 770.75 [1 0 0 1 237.2 -392.7] Ov
s
0 17.9897 708.867 18.1697 1017.11 [1 0 0 1 71.75 -322.8] Ln
S
0 17.9301 726.759 17.9301 749.604 [1 0 0 1 288.5 -55.85] Ln
S
1 1 1 0 k
/_NimbusRomNo9L-Medi 28 30 0 0 z
[1 0 0 1 29.21 715.3] e
19.877 -9.072 0 18.928 tbx
(2) t
T
[1 0 0 1 82.97 715.4] e
19.6681 -9.072 0 18.928 tbx
(2) t
T
[1 0 0 1 246 715.8] e
19.6681 -9.072 0 18.928 tbx
(2) t
T
[1 0 0 1 92.74 390.2] e
19.6681 -9.072 0 18.928 tbx
(2) t
T
[1 0 0 1 246.3 390.5] e
19.6681 -9.072 0 18.928 tbx
(2) t
T
[1 0 0 1 139.3 390.2] e
27.8595 -9.072 0 18.928 tbx
(3) t
T
[1 0 0 1 300 649.4] e
16.3315 -9.072 0 18.928 tbx
(*) t
T
0 61.4763 770.892 21.5 770.75 [1 0 0 1 292.1 -68.73] Ln
S
0 0 0 0 k
6.80074 6.80074 14.5 770.75 [1 0 0 1 346.3 -68.97] Ov
s
6.80074 6.80074 14.5 770.75 [1 0 0 1 146.8 -282.8] Ov
s
0 61.4763 770.892 21.5 770.75 [1 0 0 1 146.8 -283.2] Ln
S
6.80074 6.80074 14.5 770.75 [1 0 0 1 201 -283.5] Ov
s
0 61.4763 770.892 21.5 770.75 [1 0 0 1 201 -283.1] Ln
S
6.80074 6.80074 14.5 770.75 [1 0 0 1 255.2 -283.3] Ov
s
0 15.5665 710.445 52.9393 910.324 [1 0 0 1 145.5 -215.5] Ln
S
1 1 1 0 k
[1 0 0 1 165.5 498.6] e
19.6681 -9.072 0 18.928 tbx
(2) t
T
[1 0 0 1 209.6 498.8] e
19.6681 -9.072 0 18.928 tbx
(2) t
T
0 0 0 0 k
6.80074 6.80074 14.5 770.75 [1 0 0 1 221 -177.7] Ov
s
0 61.4763 770.892 21.5 770.75 [1 0 0 1 221 -178] Ln
S
6.80074 6.80074 14.5 770.75 [1 0 0 1 275.2 -178.3] Ov
s
0 61.4763 770.892 21.5 770.75 [1 0 0 1 275.2 -177.9] Ln
S
6.80074 6.80074 14.5 770.75 [1 0 0 1 329.4 -178.2] Ov
s
0 61.4763 770.892 21.5 770.75 [1 0 0 1 329 -178] Ln
S
6.80074 6.80074 14.5 770.75 [1 0 0 1 383.2 -178.3] Ov
s
0 61.4763 770.892 21.5 770.75 [1 0 0 1 383.2 -177.9] Ln
S
6.80074 6.80074 14.5 770.75 [1 0 0 1 437.4 -178.2] Ov
s
0 61.4763 770.892 21.5 770.75 [1 0 0 1 437.2 -178.2] Ln
S
6.80074 6.80074 14.5 770.75 [1 0 0 1 491.4 -178.5] Ov
s
1 1 1 0 k
[1 0 0 1 283.7 603.3] e
19.6681 -9.072 0 18.928 tbx
(2) t
T
[1 0 0 1 337.4 603.5] e
19.6681 -9.072 0 18.928 tbx
(2) t
T
[1 0 0 1 239.5 603.3] e
19.6681 -9.072 0 18.928 tbx
(2) t
T
[1 0 0 1 498.7 604.5] e
19.6681 -9.072 0 18.928 tbx
(2) t
T
[1 0 0 1 391 604.4] e
27.8595 -9.072 0 18.928 tbx
(3) t
T
0 143.101 565.669 107.14 659.314 [1 0 0 1 92.22 34.58] Ln
S
[1 0 0 1 136.2 715.4] e
15.3708 -9.072 0 18.928 tbx
(4) t
T
[1 0 0 1 190.7 715.9] e
15.3708 -9.072 0 18.928 tbx
(4) t
T
[1 0 0 1 299.1 716.2] e
24.0168 -9.072 0 18.928 tbx
(1) t
T
[1 0 0 1 352.7 715.8] e
30.7416 -9.072 0 18.928 tbx
(5) t
T
0 17.9301 726.759 17.9301 749.604 [1 0 0 1 434.3 -163.7] Ln
S
[1 0 0 1 445.8 541.5] e
16.3315 -9.072 0 18.928 tbx
(*) t
T
[1 0 0 1 444.9 603.6] e
24.0168 -9.072 0 18.928 tbx
(1) t
T
[1 0 0 1 191.3 390.3] e
24.0168 -9.072 0 18.928 tbx
(1) t
T
0 17.9301 726.759 34.7845 752.155 [1 0 0 1 235.2 -271.5] Ln
S
[1 0 0 1 246.6 433.7] e
16.3315 -9.072 0 18.928 tbx
(*) t
T
0 17.9301 726.759 0.452972 752.548 [1 0 0 1 269.5 -271.8] Ln
S
[1 0 0 1 281 433.4] e
16.3315 -9.072 0 18.928 tbx
(*) t
T
0 17.9301 726.759 17.9301 749.604 [1 0 0 1 180.4 -378.2] Ln
S
[1 0 0 1 191.9 327] e
16.3315 -9.072 0 18.928 tbx
(*) t
T
[1 0 0 1 263.1 498.6] e
24.0168 -9.072 0 18.928 tbx
(1) t
T
%%PageTrailer
_PDX_savepage restore
%%Trailer
end
showpage
%%EOF

%%EndDocument
@endspecial 289 2694 a
 /End PSfrag
 289 2694 a 289 1677 a
 /Hide PSfrag
 289 1677
a Fd -146 1711 a(PSfrag) h(replacemen) o(ts) p -146 1729
435 2 v 289 1731 a
 /Unhide PSfrag
 289 1731 a 225 1787 a
  {
 225 1787 a Fb(\000) p
Fd(1) 225 1787 y
  } 0/Place PSfrag
 225 1787 a 225 1847 a
  {
 225 1847 a Fb(\000) p
Fd(2) 225 1847 y
  } 1/Place PSfrag
 225 1847 a 225 1908 a
  {
 225 1908 a Fb(\000) p
Fd(3) 225 1908 y
  } 2/Place PSfrag
 225 1908 a 225 1968 a
  {
 225 1968 a Fb(\000) p
Fd(5) 225 1968 y
  } 3/Place PSfrag
 225 1968 a 264 2032 a
  {
 264 2032 a Fb(\003) 264
2032 y
  } 4/Place PSfrag
 264 2032 a 237 2092 a
  {
 237 2092 a Fd(b1) 237 2092
y
  } 5/Place PSfrag
 237 2092 a 237 2152 a
  {
 237 2152 a Fd(b2) 237 2152 y
  } 6/Place PSfrag

237 2152 a 237 2213 a
  {
 237 2213 a Fd(b3) 237 2213 y
  } 7/Place PSfrag
 237
2213 a 237 2273 a
  {
 237 2273 a Fd(b4) 237 2273 y
  } 8/Place PSfrag
 237 2273
a 237 2333 a
  {
 237 2333 a Fd(b1) 237 2333 y
  } 9/Place PSfrag
 237 2333 a
237 2393 a
  {
 237 2393 a Fd(b5) 237 2393 y
  } 10/Place PSfrag
 237 2393 a 225
2449 a
  {
 225 2449 a Fb(\000) p Fd(1) 225 2449 y
  } 11/Place PSfrag
 225 2449
a 225 2509 a
  {
 225 2509 a Fb(\000) p Fd(2) 225 2509 y
  } 12/Place PSfrag
 225
2509 a 225 2570 a
  {
 225 2570 a Fb(\000) p Fd(3) 225 2570
y
  } 13/Place PSfrag
 225 2570 a 225 2630 a
  {
 225 2630 a Fb(\000) p Fd(4) 225
2630 y
  } 14/Place PSfrag
 225 2630 a 225 2690 a
  {
 225 2690 a Fb(\000) p Fd(5) 225
2690 y
  } 15/Place PSfrag
 225 2690 a Fd 926 2819 a(3) p dyy eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
