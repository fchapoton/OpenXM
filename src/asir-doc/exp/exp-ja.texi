%% $OpenXM: OpenXM/src/asir-doc/exp/exp-ja.texi,v 1.1 2004/03/17 07:48:31 takayama Exp $
\input texinfo
@iftex
@catcode`@#=6
@def@fref#1{@xrefX[#1,,@code{#1},,,]}
@def@b#1{{@bf@gt #1}}
@catcode`@#=@other
@end iftex
@overfullrule=0pt
@c -*-texinfo-*-
@comment %**start of header
@comment --- おまじない終り ---

@comment --- GNU info ファイルの名前 ---
@setfilename xyzman

@comment --- タイトル ---
@settitle 実験的仕様の関数

@comment %**end of header
@comment %@setchapternewpage odd

@comment --- おまじない ---
@ifinfo
@macro fref{name}
@ref{\name\,,@code{\name\}}
@end macro
@end ifinfo

@iftex
@comment @finalout
@end iftex

@titlepage
@comment --- おまじない終り ---

@comment --- タイトル, バージョン, 著者名, 著作権表示 ---
@title 実験的仕様の関数
@subtitle Risa/Asir 実験的仕様関数説明書
@subtitle 1.0 版
@subtitle 2004 年 3 月

@author  by Risa/Asir comitters
@page
@vskip 0pt plus 1filll
Copyright @copyright{} Risa/Asir committers
2004. All rights reserved.
@end titlepage

@comment --- おまじない ---
@synindex vr fn
@comment --- おまじない終り ---

@comment --- @node は GNU info, HTML 用 ---
@comment --- @node  の引数は node-name,  next,  previous,  up --- 
@node Top,, (dir), (dir)

@comment --- @menu は GNU info, HTML 用 ---
@comment --- chapter 名を正確に並べる ---
@comment --- この文書では chapter XYZ, Chapter Index がある.
@comment ---  Chapter XYZ には section XYZについて, section XYZに関する関数がある.
@menu
* Experimental Functions::
* Index::
@end menu

@comment --- chapter の開始 ---
@comment --- 親 chapter 名を正確に. 親がない場合は Top ---
@node 実験的仕様の関数,,, Top
@chapter 実験的仕様の関数

@comment --- section 名を正確に並べる.  ---
@menu
* 実験的仕様の関数説明書について::
* 実験的仕様の関数::
@end menu

@comment --- section ``XYZについて'' の開始 ---  section XYZについての親は chapter XYZ
@node 実験的仕様の関数説明書について,,, XYZ
@section 実験的仕様の関数説明書について

@comment --- 書体指定について ---
@comment --- @code{} はタイプライタ体表示 ---
@comment --- @var{} は斜字体表示 ---
@comment --- @b{} はボールド表示 ---
@comment --- @samp{} はファイル名などの表示 ---

この説明書では
@b{Asir} に導入された実験的仕様の関数について説明する.
正式な関数として導入されたものの記述は Risa/Asir マニュアル
に移動される.
ChangeLog の項目は www.openxm.org の cvsweb で
ソースコードを読む時の助けになる情報が書かれている.

@comment --- section ``実験的関数'' の開始 --- 
@node 実験的仕様の関数,,, 実験的仕様の関数
@section 実験的仕様の関数

@comment --- section ``実験的関数'' の subsection xyz_abc 
@comment --- subsection xyz_pqr xyz_stu がある.
@menu
* quotetotex::
* quotetotex_env::
* objtoquote::
* string_to_tb::
* tb_to_string::
* write_to_tb::
@end menu

@comment --- ◯◯◯◯  関数 syz_abc の説明 ◯◯◯◯ 
@comment --- 個々の関数の説明の開始 ---
@comment --- section 名を正確に ---
@node quotetotex quotetotex_env,,, 実験的仕様の関数
@subsection @code{quotetotex}, @code{quotetotex_env}
@comment --- 索引用キーワード
@findex quotetotex
@findex quotetotex_env

@comment --- 関数の簡単な説明 ---
@table @t
@item quotetotex(@var{q}) 
:: @var{q} を latex 形式で表現した文字列に変換する.
@item quotetotex_env(@var{key},@var{value})
:: quotetotex の動作を制御するパラメータを変更する.
@item quotetotex_env()
:: quotetotex の動作を制御するパラメータの現在値を戻す.
@item quotetotex_env(0)
:: quotetotex の動作を制御するパラメータをデフォールト値に戻す.
@end table

@comment --- 引数の簡単な説明 ---
@table @var
@item return
文字列(quotetotex) または リストまたはオブジェクト(quotetotex_env)
@item q
quote
@item key
文字列
@item value
オブジェクト
@end table

@comment --- ここで関数の詳しい説明 ---
@comment --- @itemize〜@end itemize は箇条書き ---
@comment --- @bullet は黒点付き ---
@itemize @bullet
@item
quotetotex は @var{q} を latex 形式で表現した文字列に変換する.
@item 
以下 quotetotex_env のパラメータの意味を説明する.
@item 
conv_rule: 3 ビットを用いて変換ルールを指定する.
0ビット目は symbol_table による変換を行うか,
1ビット目は添字変換を行うか,
2ビット目は d から始まる変数名を微分作用素と見なして処理するか,
を意味する.
たとえば conv_rule として 3 を指定すると,
0ビット目, 1 ビット目が 1 となるので
symbol_table による変換を行い, 添字変換をおこなう.
添字変換は数字と英字の境目および _ 記号を区切りとする.
symbol_table による変換が最初に適用される.
alpha, beta, 等は自動的をギリシャ文字に変換するテーブルは
内蔵ずみ.
@item 
dp_vars_prefix: 分散表現多項式は
@tex 
$x_0, x_1, \cdots$
@end tex 
の多項式として表現されるがこの
x の部分を変更する.
@item
dp_vars_hweyl: 分散表現多項式をワイル代数の元とみなして
tex に変換する.
偶数個変数があるときは 最初の半分を 
@tex 
$x_0, x_1, \cdots$
@end tex 
に
後半の半分を
@tex 
$\partial_0, \partial_1, \cdots$
@end tex 
に変換する.
奇数個の場合は最後の変数が同時化変数として h で表示される.
@item 
conv_func: ユーザ定義の変換関数をよぶ.
@item 

@end itemize

@comment --- @example〜@end example は実行例の表示 ---
@example
[3] quotetotex(quote(1/(x+1)));
\frac@{ 1@} @{ (  @{x@}+ 1)@}
[4]  quotetotex(objtoquote(diff(x^x,x)));
   @{x@}^@{  @{x@}- 1@}   @{x@}+  \log( @{x@})   @{x@}^@{ @{x@}@}
[5] quotetotex_env("conv_rule",3);
[6] quotetotex(objtoquote( (alpha2beta+x_i_j)^2));
  @{\alpha@}_@{2,\beta@}^@{ 2@} +   2  @{x@}_@{i,j@}  @{\alpha@}_@{2,\beta@}+  @{x@}_@{i,j@}^@{ 2@}
@end example

@comment --- 参照(リンク)を書く ---
@table @t
@item 参照
@ref{objtoquote}
@end table

@comment --- ChangeLog を書く. ソースコードの位置. 変更日時 など CVSサーバを見るため
@noindent
ChangeLog
@itemize @bullet
@item この関数は 2004年2月末から3月にかけて asir を texmacs に対応させるために
書かれた. Asir-contrib の print_tex_form がその原型であり, それを効率化しまた
出力形式を改善した.
@item 関連するソース.
@end itemize

@comment --- ◯◯◯◯  関数 syz_pqr, xyz_stu の説明 ◯◯◯◯ 
@comment --- 複数の関数をまとめて説明する例 ---
@node xyz_pqr xyz_stu,,, 実験的仕様の関数
@subsection @code{xyz_pqr}, @code{xyz_stu}
@findex xyz_pqr
@findex xyz_stu

@comment --- 関数の簡単な説明 ---
@comment --- @itemx は複数に対して説明を一つつける場合に使う ---
@table @t
@item xyz_pqr(@var{arg1},@var{arg2}[,@var{flag}])
@itemx xyz_stu(@var{arg1},@var{arg2})
:: xyz に関する操作.
@end table

@table @var
@item return
整数
@item arg1, arg2
整数
@item flag
0 または 1
@end table

@itemize @bullet
@item
@code{xyz_pqr()} は, @var{arg1}, @var{arg2} を pqr する.
@item
@var{flag} が 0 でないとき, モジュラ計算を行う.
@item
@code{xyz_stu()} は stu アルゴリズムを用いる.
@end itemize

@example
[219] xyz_pqr(1,2);
3
[220] xyz_pqr(1,2,1);
3
0
[221] xyz_stu(1,2);
3
@end example

@table @t
@item 参照
@ref{xyz_abc}
@end table

@comment --- ChangeLog を書く. ソースコードの位置. 変更日時 など CVSサーバを見るため
@noindent
ChangeLog
@itemize @bullet
@item この関数は 2004-3-1 から 2004-3-14 にかけて アルゴリズム xyz (論文
 http://www.afo.org/xyz.pdf ) を用いて書き直された.
 変更をうけたソースコードは xxxyy.rr, ppp.c である.
@item この関数は 2000 頃にはじめてのバージョンが書かれた. ソースは ppp.c である.
@end itemize

@comment --- ◯◯◯◯  以下他の関数について真似して記述する. ◯◯◯◯ 


@comment --- おまじない ---
@node Index,,, Top
@unnumbered Index
@printindex fn
@printindex cp
@iftex
@vfill @eject
@end iftex
@summarycontents
@contents
@bye
@comment --- おまじない終り ---
