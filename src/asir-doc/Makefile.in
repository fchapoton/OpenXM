# $OpenXM: OpenXM/src/asir-doc/Makefile.in,v 1.15 2020/09/05 00:57:16 noro Exp $
OpenXM_HOME=@OpenXM_HOME@
OpenXM_doc_asir2000=${OpenXM_HOME}/doc/asir2000
OpenXM_lib_asir=${OpenXM_HOME}/lib/asir
OpenXM_man=${OpenXM_HOME}/man/man1
CC=@CC@
TEX=@TEX@
PTEX=@PTEX@
MAKEINFO=@MAKEINFO@ --force
LANGUAGES = en ja
INSTALL = cp -f
TEXI2HTML = texi2html

.SUFFIXES: .dvi .pdf

.dvi.pdf:
	@echo "xetex has already generated PDF files"

all:
	if [ ! -f .make_done ]; then ${MAKE} all2 ; touch .make_done ; fi

all2: help-en html-en help-ja html-ja html-internal-ja html-exp-ja man

install: all
	-if [ ! -f .install_done ] ; then \
		test -d  ${OpenXM_doc_asir2000} || mkdir -p ${OpenXM_doc_asir2000} ; \
		for j in ${LANGUAGES}; do \
			rm -rf ${OpenXM_lib_asir}/help-$$j ; \
			rm -rf ${OpenXM_doc_asir2000}/html-$$j ; \
		done ; \
		for j in ${LANGUAGES}; do \
			tar cf - help-$$j | (cd ${OpenXM_lib_asir}; tar xf -) ; \
			tar cf - html-$$j | (cd ${OpenXM_doc_asir2000}; tar xf -) ; \
			${INSTALL} man-$$j.pdf man-$$j.pdf ${OpenXM_doc_asir2000} ; \
		done ; \
		tar cf - html-internal-ja | (cd ${OpenXM_doc_asir2000}; tar xf -) ; \
		tar cf - html-exp-ja      | (cd ${OpenXM_doc_asir2000}; tar xf -) ; \
		${INSTALL} asir.1 ${OpenXM_man} ; \
		touch .install_done ; \
	fi

configure-texindex:
	if [ ! -f .configure_sub_done ]; then \
		(cd jtexindex/C; ./configure; ${MAKE} clean); \
		touch .configure_sub_done ; \
	fi

texindex: configure-texindex
	(cd jtexindex/C; ${MAKE})

BUILTINS=\
	parts/builtin/array.texi parts/builtin/bit.texi\
	parts/builtin/function.texi parts/builtin/io.texi\
	parts/builtin/list.texi parts/builtin/misc.texi\
	parts/builtin/num.texi parts/builtin/poly.texi\
	parts/builtin/string.texi parts/builtin/numeric.texi\
	parts/builtin/type.texi parts/builtin/upoly.texi\
	parts/builtin/structure.texi parts/builtin/module.texi 

PARTS=\
	parts/algnum.texi parts/appendix.texi parts/asir.texi\
	parts/builtin.texi parts/debug.texi\
	parts/process.texi\
	parts/ff.texi parts/groebner.texi\
	parts/intro.texi parts/risa.texi parts/type.texi

SRCS=man.texi $(PARTS) $(BUILTINS)

INTERNAL_SRCS=internal.texi int-parts/datatype.texi int-parts/gc.texi\
    int-parts/inter.texi int-parts/intro.texi int-parts/macro.texi\
    int-parts/operation.texi int-parts/parser.texi int-parts/port.texi\
    int-parts/datatype/algnum.texi\
    int-parts/datatype/char2ff.texi\
    int-parts/datatype/dpoly.texi\
    int-parts/datatype/float.texi\
    int-parts/datatype/largeff.texi\
    int-parts/datatype/list.texi\
    int-parts/datatype/mat.texi\
    int-parts/datatype/number.texi\
    int-parts/datatype/poly.texi\
    int-parts/datatype/ratexp.texi\
    int-parts/datatype/ratnum.texi\
    int-parts/datatype/risaobj.texi\
    int-parts/datatype/smallff.texi\
    int-parts/datatype/string.texi\
    int-parts/datatype/vect.texi

tmp-en tmp-html-en: extract_man
tmp-ja tmp-ja_euc tmp-ja_utf8 tmp-html-ja tmp-html-internal-ja: extract_man
man-en.pdf man-ja.pdf: texindex
help-en help-func: extract_func
html-win-en html-win: gen_hh

tmp-ja: ${SRCS}
	-rm -rf $@
	-mkdir -p $@/parts/builtin
	-cp texinfo*.* txi*tex $@
	-for i in ${SRCS}; do ./extract_man ja $$i | nkf -w > $@/$$i; done

tmp-ja_euc: ${SRCS}
	-rm -rf $@
	-mkdir -p $@/parts/builtin
	-cp texinfo*.* txi*tex $@
	-for i in ${SRCS}; do ./extract_man ja $$i | nkf -e > $@/$$i; done

tmp-ja_utf8: ${SRCS}
	-rm -rf $@
	-mkdir -p $@/parts/builtin
	-cp texinfo*.* txi*tex $@
	-for i in ${SRCS}; do ./extract_man ja $$i | nkf -w > $@/$$i; done

tmp-html-ja: ${SRCS}
	-rm -rf $@
	-mkdir -p $@/parts/builtin
	-cp texinfo*.* txi*tex $@
	-for i in ${SRCS}; do \
	  ./extract_man ja $$i | nkf -w | sed -e "s/@fref/@ref/g" > $@/$$i; \
	done 

tmp-en: ${SRCS}
	-rm -rf $@
	-mkdir -p $@/parts/builtin
	-cp texinfo*.* txi*tex $@
	-for i in ${SRCS}; do ./extract_man en $$i > $@/$$i; done

tmp-html-en: ${SRCS}
	-rm -rf $@
	-mkdir -p $@/parts/builtin
	-cp texinfo*.* txi*tex $@
	-for i in ${SRCS}; do \
		./extract_man en $$i | sed -e "s/@fref/@ref/g" > $@/$$i;\
	done

tmp-internal-ja: ${INTERNAL_SRCS}
	-rm -rf $@
	-mkdir -p $@/parts/builtin $@/int-parts/datatype
	-cp texinfo*.* txi*tex $@
	-for i in ${INTERNAL_SRCS}; do \
	  ./extract_man ja $$i | nkf -w > $@/$$i; \
	done 

tmp-html-internal-ja: ${INTERNAL_SRCS}
	-rm -rf $@
	-mkdir -p $@/parts/builtin $@/int-parts/datatype
	-cp texinfo*.* txi*tex $@
	-for i in ${INTERNAL_SRCS}; do \
	  ./extract_man ja $$i | nkf -w | sed -e "s/@fref/@ref/g" > $@/$$i; \
	done 

man-ja.pdf: tmp-ja
	-(cd tmp-ja; ${PTEX} man.texi; ../jtexindex/C/texindex man.??; ${PTEX} man.texi)
	-mv -f tmp-ja/man.pdf $@
	-touch $@

man-en.pdf: tmp-en
	-(cd tmp-en; ${TEX} man.texi; ../jtexindex/C/texindex man.??; ${TEX} man.texi)
	-(cd tmp-en; ${MAKEINFO} man.texi)
	-mv -f tmp-en/man.pdf $@
	-touch $@

man: man-ja.pdf man-en.pdf internal-ja.pdf

help-ja: tmp-ja_euc man-ja.pdf
	-rm -rf $@
	-mkdir -p $@
	-(cd tmp-ja_euc; ${MAKEINFO} man.texi)
	-(cd $@; for i in ../tmp-ja_euc/risaman*; do ../extract_func -j $$i; done)

help-en: tmp-en man-en.pdf
	-rm -rf $@
	-mkdir -p $@
	-(cd $@; for i in ../tmp-en/risaman*; do ../extract_func $$i; done)

html-ja: tmp-html-ja
	-rm -rf $@
	-mkdir -p $@
	-(cd $@; ln -s ../texi2html.perl . ; ../texi2html -menu -split_node ../tmp-html-ja/man.texi)

html-en: tmp-html-en
	-rm -rf $@
	-mkdir -p $@
	-(cd $@; ln -s ../texi2html.perl . ;../texi2html -menu -split_node ../tmp-html-en/man.texi)

html-win: html-ja gen_hh
	-rm -rf $@
	-mkdir -p $@
	(cd html-ja; for i in *; do nkf -s $$i > ../$@/$$i; done)
	gen_hh html-win html-win

html-win-en: html-en gen_hh
	-rm -rf $@
	-mkdir -p $@
	(cd html-en; for i in *; do nkf -s $$i > ../$@/$$i; done)
	gen_hh html-win-en html-win-en

html-internal-ja: tmp-html-internal-ja
	-rm -rf $@
	-mkdir -p $@
	-(cd $@; ln -s ../texi2html.perl . ; ../${TEXI2HTML} ../tmp-html-internal-ja/internal.texi)

html-exp-ja: exp/exp-ja.texi
	-rm -rf $@
	-mkdir -p $@
	-nkf -w exp/exp-ja.texi > $@/exp-ja.texi
	-(cd $@; ln -s ../texi2html.perl . ; ../${TEXI2HTML} -expandinfo -menu -split_node exp-ja.texi)

internal-ja.pdf: tmp-internal-ja
	-(cd tmp-internal-ja; ${PTEX} internal.texi; ../jtexindex/C/texindex internal.??; ${PTEX} internal.texi)
	-mv -f tmp-internal-ja/internal.pdf $@
	-touch $@

extract_func: extract_func.o
	${CC} -o $@ extract_func.o

extract_man: extract_man.o
	${CC} -o $@ extract_man.o

gen_hh: html_tools/gen_hh.c
	${CC} -o $@ html_tools/gen_hh.c

targzuu: help-en help-ja html-en html-ja
	-tar cf - help-en | gzip -9 | uuencode help-en.tgz > help-en.uu
	-tar cf - help-ja | gzip -9 | uuencode help-ja.tgz > help-ja.uu
	-tar cf - html-en | gzip -9 | uuencode html-en.tgz > html-en.uu
	-tar cf - html-ja | gzip -9 | uuencode html-ja.tgz > html-ja.uu

clean:
	-(cd jtexindex/C; ${MAKE} clean)
	-rm -f man*.pdf man*.pdf *.o extract_man extract_func gen_hh
	-rm -f internal-ja.pdf
	-rm -rf tmp*
	-rm -rf help-*
	-rm -rf html-*

distclean: clean
	-rm -rf autom4te.cache config.log config.status Makefile
	-rm -f .configure*_done .make_done .install_done
