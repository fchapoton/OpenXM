# $OpenXM: OpenXM/src/asir-doc/Makefile.in,v 1.5 2007/09/29 05:17:08 takayama Exp $
OpenXM_HOME=@prefix@
OpenXM_doc_asir2000=${OpenXM_HOME}/doc/asir2000
OpenXM_lib_asir=${OpenXM_HOME}/lib/asir
OpenXM_man=${OpenXM_HOME}/man/man1
CC=@CC@
PTEX=@PTEX@
DVIPDF=dvipdfmx

all: update-makefile
	if [ ! -f .make_done ]; then make all2 ; touch .make_done ; fi
install:
	if [ ! -f .install_done ] ; then make install2 ; touch .install_done ; fi

all2: all-en all-ja
install2: install-en install-ja install-man-pages

all-en: texindex extract_man extract_func man-en.dvi help-en html-en
all-ja: texindex extract_man extract_func man-ja.dvi help-ja html-ja html-internal-ja html-exp-ja

install-en: all-en
	-rm -r -f ${OpenXM_lib_asir}/help-en
	-tar cf - help-en | (cd ${OpenXM_lib_asir}; tar xf - )
	-mkdir ${OpenXM_doc_asir2000}
	-rm -r -f ${OpenXM_doc_asir2000}/html-en
	-tar cf - html-en | ( cd ${OpenXM_doc_asir2000}; tar xf - )
	-cp man-en.dvi ${OpenXM_doc_asir2000}

install-ja: all-ja
	-rm -r -f ${OpenXM_lib_asir}/help-ja
	-tar cf - help-ja | (cd ${OpenXM_lib_asir}; tar xf - )
	-mkdir ${OpenXM_doc_asir2000}
	-rm -r -f ${OpenXM_doc_asir2000}/html-ja
	-tar cf - html-ja | ( cd ${OpenXM_doc_asir2000}; tar xf - )
	-cp man-ja.dvi ${OpenXM_doc_asir2000}
	-tar cf - html-internal-ja | ( cd ${OpenXM_doc_asir2000}; tar xf - )
	-tar cf - html-exp-ja | ( cd ${OpenXM_doc_asir2000}; tar xf - )

install-man-pages:
	-install asir.1 ${OpenXM_man}

update-makefile: Makefile
Makefile: Makefile.in
	(rm -f .configure_done ; ./make-configure)

configure:
	(cd jtexindex/C; ./configure; make clean)

texindex:
	(cd jtexindex/C; make)

nkf:
	(cd nkf-1.7; make)

BUILTINS=\
	parts/builtin/array.texi parts/builtin/bit.texi\
	parts/builtin/function.texi parts/builtin/io.texi\
	parts/builtin/list.texi parts/builtin/misc.texi\
	parts/builtin/num.texi parts/builtin/poly.texi\
	parts/builtin/string.texi parts/builtin/numeric.texi\
	parts/builtin/type.texi parts/builtin/upoly.texi\
	parts/builtin/structure.texi parts/builtin/module.texi 

PARTS=\
	parts/algnum.texi parts/appendix.texi parts/asir.texi\
	parts/builtin.texi parts/debug.texi\
	parts/process.texi\
	parts/ff.texi parts/groebner.texi\
	parts/intro.texi parts/risa.texi parts/type.texi

SRCS=man.texi $(PARTS) $(BUILTINS)

INTERNAL_SRCS=internal.texi int-parts/datatype.texi int-parts/gc.texi\
    int-parts/inter.texi int-parts/intro.texi int-parts/macro.texi\
    int-parts/operation.texi int-parts/parser.texi int-parts/port.texi\
    int-parts/datatype/algnum.texi\
    int-parts/datatype/char2ff.texi\
    int-parts/datatype/dpoly.texi\
    int-parts/datatype/float.texi\
    int-parts/datatype/largeff.texi\
    int-parts/datatype/list.texi\
    int-parts/datatype/mat.texi\
    int-parts/datatype/number.texi\
    int-parts/datatype/poly.texi\
    int-parts/datatype/ratexp.texi\
    int-parts/datatype/ratnum.texi\
    int-parts/datatype/risaobj.texi\
    int-parts/datatype/smallff.texi\
    int-parts/datatype/string.texi\
    int-parts/datatype/vect.texi

tmp-ja: ${SRCS}
	-rm -rf tmp-ja
	-mkdir tmp-ja tmp-ja/parts tmp-ja/parts/builtin
	-cp texinfo.* txi*tex tmp-ja
	-for i in ${SRCS}; do ./extract_man ja $$i > tmp-ja/$$i; done

tmp-ja_euc: ${SRCS}
	-rm -rf tmp-ja_euc
	-mkdir tmp-ja_euc tmp-ja_euc/parts tmp-ja_euc/parts/builtin
	-cp texinfo.* txi*tex tmp-ja_euc
	-for i in ${SRCS}; do \
	  ./extract_man ja $$i | nkf -e > tmp-ja_euc/$$i; \
	done

tmp-html-ja: ${SRCS}
	-rm -rf tmp-html-ja
	-mkdir tmp-html-ja tmp-html-ja/parts tmp-html-ja/parts/builtin
	-cp texinfo.* txi*tex tmp-html-ja
	-for i in ${SRCS}; do \
	  ./extract_man ja $$i | nkf -e | sed -e "s/@fref/@ref/g" > tmp-html-ja/$$i; \
	done 

tmp-en: ${SRCS}
	-rm -rf tmp-en
	-mkdir tmp-en tmp-en/parts tmp-en/parts/builtin
	-cp texinfo.* txi*tex tmp-en
	-for i in ${SRCS}; do ./extract_man en $$i > tmp-en/$$i; done

tmp-html-en: ${SRCS}
	-rm -rf tmp-html-en
	-mkdir tmp-html-en tmp-html-en/parts tmp-html-en/parts/builtin
	-cp texinfo.* txi*tex tmp-en
	-for i in ${SRCS}; do \
		./extract_man en $$i | sed -e "s/@fref/@ref/g" > tmp-html-en/$$i;\
	done

tmp-html-internal-ja: ${INTERNAL_SRCS}
	-rm -rf tmp-html-internal-ja
	-mkdir tmp-html-internal-ja tmp-html-internal-ja/int-parts tmp-html-internal-ja/int-parts/datatype
	-cp texinfo.* txi*tex tmp-html-internal-ja
	-for i in ${INTERNAL_SRCS}; do \
	  ./extract_man ja $$i | nkf -e | sed -e "s/@fref/@ref/g" > tmp-html-internal-ja/$$i; \
	done 

man-ja.dvi: tmp-ja
	-rm man-ja.dvi
	-(cd tmp-ja; ${PTEX} man.texi; ../jtexindex/C/texindex man.??; ${PTEX} man.texi)
	-mv tmp-ja/man.dvi man-ja.dvi
	-touch man-ja.dvi

man-en.dvi: tmp-en
	-rm man-en.dvi
	-(cd tmp-en; tex man.texi; ../jtexindex/C/texindex man.??; tex man.texi)
	-(cd tmp-en; makeinfo man.texi)
	-mv tmp-en/man.dvi man-en.dvi
	-touch man-en.dvi

man-ja.pdf: man-ja.dvi
	${DVIPDF} man-ja.dvi

man-en.pdf: man-en.dvi
	${DVIPDF} man-en.dvi

help-ja: tmp-ja_euc man-ja.dvi
	-rm -rf help-ja
	-mkdir help-ja
	-(cd tmp-ja_euc; makeinfo man.texi)
	-(cd help-ja; for i in ../tmp-ja_euc/risaman*; do ../extract_func -j $$i; done)

help-en: tmp-en man-en.dvi
	-rm -rf help-en
	-mkdir help-en
	-(cd help-en; for i in ../tmp-en/risaman*; do ../extract_func $$i; done)

html-ja: tmp-html-ja
	-rm -rf html-ja
	-mkdir html-ja
	-(cd html-ja; ../texi2html -menu -split_node ../tmp-html-ja/man.texi)

html-en: tmp-html-en
	-rm -rf html-en
	-mkdir html-en
	-(cd html-en; ../texi2html -menu -split_node ../tmp-html-en/man.texi)

html-win: html-ja gen_hh
	-rm -rf html-win
	-mkdir html-win
	(cd html-ja; for i in *; do nkf -s $$i > ../html-win/$$i; done)
	gen_hh html-win html-win

html-win-en: html-en gen_hh
	-rm -rf html-win-en
	-mkdir html-win-en
	(cd html-en; for i in *; do nkf -s $$i > ../html-win-en/$$i; done)
	gen_hh html-win-en html-win-en

html-internal-ja: tmp-html-internal-ja
	-rm -rf html-internal-ja
	-mkdir html-internal-ja
	-(cd html-internal-ja; ../texi2html ../tmp-html-internal-ja/internal.texi)

html-exp-ja: exp/exp-ja.texi
	-rm -rf html-exp-ja
	-mkdir html-exp-ja
	-nkf -e <exp/exp-ja.texi >html-exp-ja/exp-ja.texi
	-(cd html-exp-ja; ../texi2html -menu -split_node exp-ja.texi)

internal-ja.dvi: tmp-html-internal-ja
	-rm internal-ja.dvi
	-(cd tmp-html-internal-ja; ${PTEX} internal.texi; ../jtexindex/C/texindex internal.??; ${PTEX} internal.texi)
	-mv tmp-html-internal-ja/internal.dvi internal-ja.dvi
	-touch internal-ja.dvi

extract_func: extract_func.c
	${CC} -o extract_func extract_func.c

extract_man: extract_man.c
	${CC} -o extract_man extract_man.c

gen_hh: html_tools/gen_hh.c
	${CC} -o gen_hh html_tools/gen_hh.c

targzuu: help-en help-ja html-en html-ja
	-tar cf - help-en | gzip -9 | uuencode help-en.tgz > help-en.uu
	-tar cf - help-ja | gzip -9 | uuencode help-ja.tgz > help-ja.uu
	-tar cf - html-en | gzip -9 | uuencode html-en.tgz > html-en.uu
	-tar cf - html-ja | gzip -9 | uuencode html-ja.tgz > html-ja.uu

clean:
	(cd jtexindex/C; make clean)
	-rm -f man*.dvi man*.pdf extract_man extract_func gen_hh .*done
	-rm -f internal-ja.dvi
	-rm -rf tmp*
	-rm -rf help-*
	-rm -rf html-*
