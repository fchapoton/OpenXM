%%%%%%%%%%%  $OpenXM$

[(parse) (ox.sm1) pushfile] extension

/ox.k0.loaded 1 def
%%%%%%%%%%%% Configuration: Specify your server path
/oxpath.oxk0 (bin/ox_k0) def

%% This macro is invoked when this package is loaded.
/initializePathNamesForOxk0  {
   [oxpath.oxk0] getPathNameSm1 /oxpath.oxk0 set
} def

/ox.version (2.981105) def
ox.version [(Version)] system_variable gt 
{ (This package requires the latest version of kan/sm1) message
  (Please get it from http://www.math.kobe-u.ac.jp/KAN) message
  error
} { } ifelse
(oxk0.sm1, ---OpenXM protocol module for kan/k0 2003.05.14 (C) N.Takayama.) message-quiet

/ox.k0 load isArray 
{ }
{ /ox.k0 [ ] def } ifelse

/ox.k0.init { 
  % ox.k0 ( Print("Hello!"); ) oxsubmit 
} def

/k0connectr {
 [/in-k0connectr /pass /peer /data /control ] pushVariables
 [
 /pass [(oxGenPass)] extension def
 /peer [(oxGetPort) (localhost)] extension def
 /data peer 1 get toString def
 /control peer 3 get toString def
 peer message
 [oxpath.oxlog.xterm  oxpath.ox ( -reverse -ox ) oxpath.oxk0
  ( -data ) data ( -control ) control  ( -pass ) pass 
  oxpath.null
  ( &)] cat system-csh
 [(oxCreateClient2) peer 0 pass] extension /ox.k0 set
                     %% 0 means connect from only localhost. 
 (The server is binded to the variable ox.k0) message
  ox.k0.init 
  /arg1 ox.k0 def
 ] pop
 popVariables
 arg1
} def


[(ostype)] extension  0 get
(windows) eq {
  (ox-win.k0.loaded) boundp {
  }{
    [(parse) (ox-win-k0.sm1) pushfile] extension
  } ifelse
}{
  initializePathNamesForOxk0 
} ifelse
