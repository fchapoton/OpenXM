%%  $OpenXM: OpenXM/install.txt,v 1.10 1999/12/12 10:36:45 takayama Exp $    
OpenXM/install.txt    in Japanese
As to English version see install.eg.txt (which has not been written).

★ OpenXM パッケージの Make 法
  (FreeBSD 2.2.8, FreeBSD 3.3, Linux で動作するものと期待してます.)
   OpenXM, OpenXM_contrib, OpenXM_contrib2 が必要です.
   cvs コミッタの場合  rcvs checkout OpenXM OpenXM_contrib OpenXM_contrib2
   としてソースをとりよせます.

   cd OpenXM/src
   make configure
   make

★ OpenXM パッケージの利用方法
OpenXM をホームの直下に展開した場合,
OpenXM/rc/asirrc を ~/.asirrc にコピーすれば, あとは
bash の場合なら,  source OpenXM/rc/bashrc
csh  の場合なら,  source OpenXM/rccshrc
を実行すればすべての環境設定が終了します.

OpenXM をホームの直下に展開してない場合は OpenXM/rc/bashrc, cshrc を
適当に変更して使用してください.

注意 1.
asir で日本語のヘルプを利用するには, 
PAGER=jless
export PAGER
などで, 日本語を扱える PAGER を指定する必要があるかもしれません.
注意 2.
FreeBSD 3.3 などには, /usr/local/bin/javac がついています.
この javac では, OpenXM/src/OpenMath 以下のファイルがコンパイルできません.
PATH=/usr/local/jdk1.1.8/bin:$PATH
export PATH
などとして, jdk の javac をサーチパスの先のほうへもっていくようにして
ください.

以上.  以下の使用例へ進んで下さい.

★(1) asir のマニュアルは,
   OpenXM_contrib2/asir2000/doc の README を見てね.
  (2) asir-contrib のマニュアルは,
  OpenXM/src/asir-contrib/packages/doc で make したあと,
  ptex cman.texi (日本語)
  tex cman-eg.texi (英語)
  すればよろしい.
  Online manual : ox_help(xxx) は現在一時的につかえません.

注意:
$OpenXM_HOME/bin の下の, fep, phc は, いまのところ
linux 用のバイナリまたはバイナリへのシンボリックリンクです. 
Linux 以外の場合はバイナリを入れ換える必要があります.

Solaris での make の問題点については, OpenXM/doc/OpenXM-FAQ-jp.txt
を見てください.

---------------  インストール完了 ---------------------------

★使用例

OpenXM は X Window System 上でしか動作しません. 

asir を動作させるには, key が必要です.
OpenXM/lib/asir/asir_key のコメントをみて, key を E-mail で
とりよせて下さい.

----------------  Asir クライアントの使いかた.
----------------   例 : asir に kan/sm1  を組み込む.
asir
load("xm");
P=sm1_start();    /* P はプロセス番号 */
load("katsura");
sm1_pgb(P,[katsura(4),[u0,u1,u2,u3,u4]]); /* sm1 でグレブナ基底を計算 */

---------------    例 : asir より gnuplot を呼び出す.
asir
load("xm");
P=gnuplot_start();
gnuplot(P,"plot  tan(x); ");
gnuplot(P,"splot sin(x)*cos(x); ");

---------------    例 : asir より tigers を呼び出す.
asir
load("xm");
tigers_start();
B = tigers(0,[[1,1,1,1],[0,1,2,3]]);
length(B) は 8 です.  これは, 行列 A = [[1,1,1,1],[0,1,2,3]]
に付随した, toric ideal I_A の Grobner fan が 8 つの maximal
dimensional fan を持つことを意味します.
A[i] は i 番目の GB (グレブナ基底)です.
Binomial polynomial x^a-x^b を [[a_1, ..., a_n],[b_1, ..., b_n]] なる形式で
表示します.
たとえば A[0];
[[[1,0,1,0],[0,2,0,0]],[[1,0,0,1],[0,1,1,0]],[[0,1,0,1],[0,0,2,0]]]
ですから,
x1 x3 - x2^2, x1 x4 - x2 x3, x2 x4 - x3^2
が GB であり, initial ideal は
x1 x3 , x1 x4 , x2 x4 
で生成されています.

----------------------------------
sm1
(oxasir.sm1) run  ;
(x^20-1). fctr pmat ;       sm1 より ox_asir を呼び出して因数分解させる.



[著作権表示] (現在テスト版のため情報が完備してません)
このソフトウエアは動作およびその結果につき, 一切の保証をしません.
ライセンス形態については現在検討中であります.  法務committer を
募集中.

OpenXM : url http://www.math.kobe-u.ac.jp/openXM
         cvs cite : kerberos.math.kobe-u.ac.jp
sm1 :  作者 Nobuki Takayama, url http://www.math.kobe-u.ac.jp/KAN, 
       ライセンス形態   GPL??
asir :    作者  url
         ライセンス形態   ??
gnuplot : 作者  url
         ライセンス形態   GPL?
phc : 作者 Jan Verschelde,  url
         ライセンス形態   ??
tigers : 作者 Birk Hubert,  url
         ライセンス形態   ??

[OpenXM についての連絡先]
takayama@math.sci.kobe-u.ac.jp

[OpenXM_HOME 下のファイルの構成]
lib/asir には, asir のライブラリ, ox_asir 本体
(ox_asir.xxyyzz.os なる名前で格納されています)

lib/sm1 は src/SSkan/Doc への symbolic link
であり, sm1 のライブラリファイルが格納されています.
lib/sm1/bin には, binaryfiles
    sm1, ox_sm1, ox,  ox_log, ox_sm1_*
へのシンボリックリンクが格納されます.
このシンボリックリンクは src/kxx で make install を実行することにより
作成されます.

sm1 が ox_asir を利用するのに必要なファイル.
   lib/asir/ox_asir, 
   lib/sm1/bin/ox, lib/sm1/bin/ox_log  (src/kxx/ox, src/kxx/ox_log)
   lib/sm1/ox.sm1, lib/sm1/oxasir.sm1

asir が ox_sm1_forAsir を利用するのに必要なファイル:
   lib/asir/ox_launch
   lib/sm1/bin/ox_sm1_forAsir (ox_sm1 へのリンク)
   lib/asir/xm  
   lib/sm1/*.sm1 の全ての cohom ライブラリファイル.
     callsm1.sm1 callsm1b.sm1 
     (ox_sm1_forAsir の定義ファイル, src/kxx/oxserver00.c 
      ox_sm1 が ox_sm1_forAsir という名前で呼ばれるとこれらのファイルをロード.)

asir が ox_sm1_gnuplot を利用するのに必要なファイル:
    lib/asir/ox_launch
    lib/sm1/bin/ox_sm1_gnuplot (ox_sm1 へのリンク, ox_sm1_gnuplot は fork して
                                gnuplot_forox を実行します.)
    lib/asir/xm  
    lib/sm1/callsm1.sm1, lib/sm1/gnuplot.sm1
     (ox_sm1_gnuplot の定義ファイル, src/kxx/oxserver00.c 
      ox_sm1 が ox_sm1_gnuplot という名前で呼ばれるとこれらのファイルをロード.)
    bin/gnuplot_forox,  bin/gnuplot_x11  (gnuplot 本体, src/gnuplot*)

----------------------------------------
[開発者用メモ]

<< sm1, ox_sm1, ox, oxlog の debug >>
binary file は各 directory の make install により
OpenXM/bin にコピーされますが,
debug 用にいちいちコピーするのは面倒なので,
OpenXM/src/kan96xx で make install2
OpenXM/src/kxx で make install2
を実行すると, 
OpenXM/bin/sm1, ox, ox_sm1, oxlog より,
OpenXM/src/kan96xx/Kan/sm1
OpenXM/src/kxx/ox, OpenXM/src/kxx/ox_sm1, OpenXM/src/kxx/oxlog
へのシンボリックリンクが作成されます.

[CVSコミッタ用メモ]
<<  OpenXM ディレクトリ配布版の作成方法 >>
rcvs export -rHEAD OpenXM
rcvs export -rHEAD OpenXM_contrib
rcvs export -rHEAD OpenXM_contrib2
して, OpenXM, OpenXM_contrib, OpenXM_contrib2 全体を tar+gzip.
